%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (Studio) ()
%%Title: (BtG palette.ai)
%%CreationDate: 3/16/2017 11:17 AM
%%Canvassize: 16383
%%BoundingBox: 1480 3097 1977 3819
%%HiResBoundingBox: 1480.7842 3097.0264 1976.6152 3818.5313
%%DocumentProcessColors: Cyan Magenta Yellow
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 1749.2695 3442.04 1749.2695 3442.04
%AI3_TileBox: 1450.7847 3021.8232 2045.8047 3863.6836
%AI3_DocumentPreview: None
%AI5_ArtSize: 669.2305 907.6924
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -5017 7196.54 0.13 1762 955 18 0 0 113 116 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 88 128 8
%%BeginData: 8644 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD16FF843560595F5960595F5960595F59605960FD47FF8335355F
%3559355F3559355F3559355F59FD47FF84355F3560595F3560595F356059
%5F3560FD47FF5935355935593559355935593559355935FD47FF84355F59
%60595F5960595F5960595F3560FD47FF7D593559355F3559355F3559355F
%355935FD26FFA829545353295453532954FD16FF843560595F3560595F35
%60595F3560355FFD26FF7EFD0A29FD16FF7D353559355935593559355935
%59355959FD26FF7E29292829292928292929FD16FF843560595F5960595F
%5960595F59605960FD26FF7EFD0A29FD16FF8335355F3559355F3559355F
%3559355F59FD26FF7EFD0A29FD16FF84355F3560595F3560595F3560595F
%3560FD26FF7EFD0A29FD16FF5935355935593559355935593559355935FD
%26FF7E28292929282929292829FD16FF84355F5960595F5960595F596059
%5F3560FD26FF7EFD0A29FD16FF7D593559355F3559355F3559355F355935
%FD26FF7EFD0A29FD16FF843560595F3560595F3560595F3560355FFD26FF
%7EFD0A29FD16FF7D35355935593559355935593559355959FD26FF7E2929
%2829292928292929FD16FF843560595F5960595F5960595F59605960FD26
%FF7EFD0A29FD16FF8335355F3559355F3559355F3559355F59FD26FF7EFD
%0A29FD16FF84355F3560595F3560595F3560595F3560FD26FF7EFD0A29FD
%16FF5935355935593559355935593559355935FD26FF7E28292929282929
%292829FD16FF84355F5960595F5960595F5960595F3560FD26FF7EFD0A29
%FD16FF7D593559355F3559355F3559355F355935FD26FF7EFD0A29FD16FF
%843560595F3560595F3560595F3560355FFD26FF7EFD0A29A0C3A0C2A0C3
%A0C2A0C2A0FD0BFF7D35355935593559355935593559355959FD26FF7E29
%292829292928292929BB93B593BB93B593BB93BBFD0BFF843560595F5960
%595F5960595F59605960FD26FF7EFD0A299293929392939293929399FD0B
%FF8335355F3559355F3559355F3559355F59FD26FF7EFD0A299392BB9393
%92BB939392BCFD0BFF84355F3560595F3560595F3560595F3560FD26FF7E
%FD0A299293929392939293929393FD0BFF59353559355935593559355935
%59355935FD26FF7E28292929282929292829B593BB93B593BB93B593BCFD
%0BFF84355F5960595F5960595F5960595F3560FD26FF7EFD0A2992939293
%92939293929393FD0BFF7D593559355F3559355F3559355F355935FD26FF
%7EFD0A29BB939392BB939392BB93BBFD0BFF843560595F3560595F356059
%5F3560355FFD26FF7EFD0A299293929392939293929399FD0BFF7D353559
%35593559355935593559355959FD26FF7E29292829292928292929BB93B5
%93BB93B593BB93BBFD0BFF843560595F5960595F5960595F59605960FD26
%FF7EFD0A299293929392939293929399FD0BFF8335355F3559355F355935
%5F3559355F59FD26FF7EFD0A299392BB939392BB939392BCFD0BFF84355F
%3560595F3560595F3560595F3560FD26FF7EFD0A29929392939293929392
%9393FD0BFF5935355935593559355935593559355935FD26FF7E28292929
%282929292829B593BB93B593BB93B593BCFD0BFF84355F5960595F596059
%5F5960595F3560FD26FF7EFD0A299293929392939293929393FD0BFF7D59
%3559355F3559355F3559355F355935FD26FF7EFD0A29BB939392BB939392
%BB93BBFD0BFF843560595F3560595F3560595F3560355FFD26FF7EFD0A29
%9293929392939293929399FD0BFF7D353559355935593559355935593559
%59FD26FF7E29292829292928292929BB93B593BB93B593BB93BBFD0BFF84
%3560595F5960595F5960595F59605960FD26FF7EFD0A2992939293929392
%93929399FD0BFF8335355F3559355F3559355F3559355F59FD26FF7EFD0A
%299392BB939392BB939392BCFD0BFF84355F3560595F3560595F3560595F
%3560FD26FF7EFD0A299293929392939293929393FD0BFF59353559355935
%59355935593559355935FD26FF7E28292929282929292829B593BB93B593
%BB93B593BCFD0BFF84355F5960595F5960595F5960595F3560FD26FF7EFD
%0A299293929392939293929393FD0BFF7D593559355F3559355F3559355F
%355935FD26FF7EFD0A29BB939392BB939392BB93BBFD0BFF843560595F35
%60595F3560595F3560355FFD26FF7EFD0A299293929392939293929399FD
%0BFF7D35355935593559355935593559355959FD26FF7E29292829292928
%292929BB93B593BB93B593BB93BBFD0BFF843560595F5960595F5960595F
%59605960FD26FF7EFD0A299293929392939293929399FD0BFF8335355F35
%59355F3559355F3559355F59FD26FF7EFD0A299392BB939392BB939392BC
%FD0BFF84355F3560595F3560595F3560595F3560FD26FF7EFD0A29929392
%9392939293929393FD0BFF5935355935593559355935593559355935FD26
%FF7E28292929282929292829B593BB93B593BB93B593BCFD0BFF84355F59
%60595F5960595F5960595F3560FD26FF7EFD0A2992939293929392939293
%93FD0BFF7D593559355F3559355F3559355F355935FD26FF7EFD0A29BB93
%9392BB939392BB93BBFD0BFF843560595F3560595F3560595F3560355FFD
%26FF7EFD0A299293929392939293929399FD0BFF7D353559355935593559
%35593559355959FD26FF7E29292829292928292929BB93B593BB93B593BB
%93BBFD0BFF843560595F5960595F5960595F59605960FD26FF7EFD0A2992
%93929392939293929399FD0BFF8335355F3559355F3559355F3559355F59
%FD26FF7EFD0A299392BB939392BB939392BCFD0BFF84355F355F355F355F
%355F355F355F355FFD26FF7EFD0A299293929392939293929393FD0BFFA8
%A884A884A884A884A884A884A884A884FD26FF7E28292929282929292829
%B593BB93B593BB93B593BCFD42FF7EFD0A299293929392939293929393FD
%42FF7EFD0A29BB939392BB939392BB93BBFD42FF7EFD0A29929392939293
%9293929399FD42FF7E29292829292928292929BB93B593BB93B593BB93BB
%FD42FF7EFD0A299293929392939293929399FD42FF7EFD0A299392BB9393
%92BB939392BCFD42FF7EFD0A299293929392939293929393FD42FF7E2829
%2929282929292829B593BB93B593BB93B593BCFD42FF7EFD0A2992939293
%92939293929393FD42FF7EFD0A29BB939392BB939392BB93BBFD42FF7EFD
%0A299293929392939293929399FD42FF7E29292829292928292929BB93B5
%93BB93B593BB93BBFD42FF7EFD0A299293929392939293929399FD42FF7E
%FD0A299392BB939392BB939392BCFD42FF7EFD0A29929392939293929392
%9393FD42FF7E28292929282929292829B593BB93B593BB93B593BCFD42FF
%7EFD0A299293929392939293929393FD42FF7EFD0A29BB939392BB939392
%BB93BBFD42FF7EFD0A299293929392939293929399FD42FF7E2929282929
%2928292929BB93B593BB93B593BB93BBFD42FF7EFD0A2992939293929392
%93929399FD42FF7EFD0A299392BB939392BB939392BCFD42FF7EFD0A2992
%93929392939293929393FD42FF7E28292929282929292829B593BB93B593
%BB93B593BCFD42FF7EFD0A299293929392939293929393FD42FF7EFD0A29
%BB939392BB939392BB93BBFD42FF7EFD0A299293929392939293929399FD
%42FF7E29292829292928292929BB93B593BB93B593BB93BBFD42FF7EFD0A
%299293929392939293929399FD42FF7EFD0A299392BB939392BB939392BC
%FD42FF7EFD0A299293929392939293929393FD42FF7E2829292928292929
%2829B593BB93B593BB93B593BCFD42FF7EFD0A2992939293929392939293
%93FD42FF7EFD0A29BB939392BB939392BB93BBFD42FF7EFD0A2992939293
%92939293929399FD42FF7E29292829292928292929BB93B593BB93B593BB
%93BBFD42FF7EFD0A299293929392939293929399FD42FF7EFD0A299392BB
%939392BB939392BCFD42FF7EFD0A299293929392939293929393FD42FF7E
%28292929282929292829B593BB93B593BB93B593BCFD42FF7EFD0A299293
%929392939293929393FD42FF7EFD0A29BB939392BB939392BB93BBFD42FF
%7EFD0A299293929392939293929399FD42FF7E29292829292928292929BB
%93B593BB93B593BB93BBFD42FF7EFD0A299293929392939293929399FD42
%FF7EFD0A299392BB939392BB939392BCFD42FF7EFD0A2992939293929392
%93929393FD42FF7E28292929282929292829B593BB93B593BB93B593BCFD
%42FF7EFD0A299293929392939293929393FD42FF7EFD0A29BB939392BB93
%9392BB93BBFD43FFA9A8A9A8A9A8A9A8A9A89293929392939293929399FD
%4DFFBB93B593BB93B593BB93BBFD4DFF9293929392939293929399FD4DFF
%9392BB939392BB939392BCFD4DFF9293929392939293929393FD4DFFB593
%BB93B593BB93B593BCFD4DFF9293929392939293929393FD4DFFBB939392
%BB939392BB93BBFD4DFF9293929392939293929399FD4DFFBB93B593BB93
%B593BB93BBFD4DFF9293929392939293929399FD4DFF9392BB939392BB93
%9392BCFD4DFF9293929392939293929393FD4DFFB593BB93B593BB93B593
%BCFD4DFF9293929392939293929393FD4DFFBB939392BB939392BB93BBFD
%4DFF9293929392939293929399FD4CFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
12 Bn
%AI5_BeginGradient: (Copper Radial)
(Copper Radial) 1 4 Bd
[
0
<
0A0B0B0C0D0D0E0F0F1011111212131414151616171818191A1A1B1C1C1D1E1E1F20202122222324
24252627272829292A2B2B2C2D2D2E2F2F303131323333343536
>
<
242525262728292A2B2C2D2E2F303132333435363738393A3B3C3D3D3E3F40414243444546474849
4A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
>
<
0001010202030404050606070808090A0A0B0C0C0D0E0E0F1010111212131414151616171818191A
1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B
>
1 %_Br
<
00010102020303040405060607070808090A0A0B0B0C0C0D0E0E0F0F101111121213131415151616
17181819191A1B1B1C1C1D1E1E1F1F202121222223242425252627272828292A2A2B2B2C2D2D2E2E
2F30303131323333343435363637383839393A3B3B3C3C3D3E3E3F3F404141424343444445464647
474849494A4A4B4C4C4D4E4E4F4F50515152525354545556565757585959
>
<
3636373839393A3B3C3D3D3E3F4041424243444546464748494A4B4B4C4D4E4F5051515253545556
565758595A5B5C5C5D5E5F6061626263646566676868696A6B6C6D6E6E6F70717273747475767778
797A7A7B7C7D7E7F8081818283848586878788898A8B8C8D8E8E8F90919293949595969798999A9B
9C9C9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B2B3B4B5
>
<
636465666768696A6B6C6C6D6E6F707172737475767778797A7B7C7C7D7E7F808182838485868788
898A8B8C8D8E8F90919293949596979898999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF
B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7
D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
>
<
2B2B2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F2F303030
30303030303131313131313131323232323232323232333333333333333334343434343434343535
3535353535353536363636363636363737373737373737383838383838383839393939393939393A
3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D
>
1 %_Br
<
595A5A5A5A5B5B5B5B5C5C5C5C5D5D5D5D5E5E5E5E5F5F5F5F606060606161616162626262636363
636464646465656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D
6D6E
>
<
B5B6B6B7B8B8B9BABABBBCBCBDBEBEBFC0C0C1C2C2C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCECECF
CFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E1E1E2E3E3E4E5E5E6E7E7E8E9E9
EAEB
>
<
F5F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECECECEBEBEB
EBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1
E1E0
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
656768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D
8E8F
>
1 %_Br
[
0 0.04 0.14 0 1 51.0204 0.395812 %_BS
%_0 0.04 0.14 0 1 51.0204 0.395812 Bs
0 0.21 0.39 0.17 1 51.0204 30.8989 %_BS
%_0 0.21 0.39 0.17 1 51.0204 30.8989 Bs
0.35 0.71 0.96 0.24 1 50 78.0899 %_BS
%_0.35 0.71 0.96 0.24 1 50 78.0899 Bs
0.43 0.92 0.88 0.56 1 50 100 %_BS
%_0.43 0.92 0.88 0.56 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Desert Sunset)
(Desert Sunset) 0 6 Bd
[
<
38393A3A3B3C3D3E3E3F404141424344444546474748494A4A4B4C4C4D4E4F4F5051515253535455
555657575859595A5B5B5C5D5D5E5F5F60616162626364646565666767686869696A6B6B6C6C6D6D
6E6E6F6F7070717172727373747475757676777778787879797A7A7B7B7B7C7C7C7D7D7E7E7E7E7F
7F7F80808080818181818282828282
>
<
5758595A5B5C5D5E5F60616263636465666768696A6B6C6D6E6F70717272737475767778797A7A7B
7C7D7E7F808081828384858586878889898A8B8C8D8D8E8F90909192939394959696979899999A9B
9B9C9D9D9E9F9FA0A1A1A2A2A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1
B1B2B2B2B3B3B3B4B4B4B4B5B5B5B5
>
<
2E2E2F2F2F3030303131313232323333333434343535353636363737373838383939393A3A3A3A3B
3B3B3C3C3C3D3D3D3D3E3E3E3F3F3F3F404040414141414242424243434344444444454545454646
464646474747474848484849494949494A4A4A4A4A4B4B4B4B4B4C4C4C4C4C4C4D4D4D4D4D4D4D4E
4E4E4E4E4E4E4E4F4F4F4F4F4F4F4F
>
0
1 %_Br
<
1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F303132323334343536373738
>
<
4040414242434444454646474848494A4A4B4C4C4D4E4E4F4F5051515253535455555657
>
<
5251504F4E4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
>
0
1 %_Br
<
050606070808090A0A0B0B0C0D0D0E0F0F101111121213141415151617171818191A1A1B1B1C1C1D
1E1E1F
>
<
2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F
3F3F40
>
<
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A595857565554
535252
>
0
1 %_Br
<
00000000000000000001010101010101010101010101010101010202020202020202020202020202
02020303030303030303030303030303030304040404040404040404040404040405050505050505
050505
>
<
7A7A79787776757474737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B
>
<
9E9E9D9D9D9C9C9B9B9B9A9A99999998989797969696959594949393939292919190908F8F8F8E8E
8D8D8C8C8C8B8B8A8A898988888887878686858584848383838282818180807F7F7E7E7E7D7D7C7C
7B7B7A
>
<
03030202020202020202020202020202020202020202020202020202020202020202020201010101
01010101010101010101010101010101010101010101010101010100000000000000000000000000
000000
>
1 %_Br
<
05050505050505050404040404040404040404030303030303030303030303020202020202020202
020202010101010101010101010101000000000000
>
<
91919190908F8F8F8E8E8E8D8D8C8C8C8B8B8A8A8A89898988888787878686858585848484838382
828281818180807F7F7F7E7E7D7D7D7C7C7C7B7B7A
>
<
DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4
B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E
>
<
2928282726262524242322222121201F1F1E1D1D1C1B1B1A19191818171616151414131212111110
0F0F0E0D0D0C0B0B0A0A0908080706060504040303
>
1 %_Br
[
0.51 0.71 0.31 0 1 50 100 %_BS
%_0.51 0.71 0.31 0 1 50 100 Bs
0.22 0.34 0.18 0 1 38.4615 71.0424 %_BS
%_0.22 0.34 0.18 0 1 38.4615 71.0424 Bs
0.12 0.25 0.32 0 1 50 53.6679 %_BS
%_0.12 0.25 0.32 0 1 50 53.6679 Bs
0.02 0.17 0.48 0 1 48 38.764 %_BS
%_0.02 0.17 0.48 0 1 48 38.764 Bs
0.000031 0.48 0.62 0.01 1 51.6129 13.1273 %_BS
%_0.000031 0.48 0.62 0.01 1 51.6129 13.1273 Bs
0.02 0.57 0.86 0.16 1 50 0 %_BS
%_0.02 0.57 0.86 0.16 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Fade to Black)
(Fade to Black) 0 2 Bd
[
0
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 1 1 50 0 %_BS
%_0 0 0 1 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Linear Gradient)
(Linear Gradient) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Radial Gradient)
(Radial Gradient) 1 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Soft Black Vignette)
(Soft Black Vignette) 1 3 Bd
[
0.2
0.2
0.2
1
1 %_Br
0.2
0.2
0.2
1
1 %_Br
[
0.2 0.2 0.2 1 1 68.3944 73.8792 %_BS
%_0.2 0.2 0.2 1 1 68.3944 73.8792 Bs
0.2 0.2 0.2 1 1 31.8603 88.7329 %_BS
%_0.2 0.2 0.2 1 1 31.8603 88.7329 Bs
0.2 0.2 0.2 1 1 50 100 %_BS
%_0.2 0.2 0.2 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 17)
(Unnamed gradient 17) 0 6 Bd
[
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFB
FBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
>
<
2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D
2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A
2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A292929292929
29292929292929292929292929292929292929292929292929292929292929292929292929292929
292928282828282828282828282828
>
<
2B2B2B2B2A2A2A2A2A2A292929292929282828282827272727272726262626262625252525252524
24242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E
1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717
17171616161616161515151515151414141414131313131313121212121212111111111111101010
1010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A0909
09090909080808080808070707070707060606060606050505050505040404040404030303030303
020202020202010101010101000000
>
1 %_Br
<
C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCF
CFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDB
DBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7
E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4
F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
65666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDC
DDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3939393939393939393939393939393838383838
38383838383838383837373737373737373737373737373736363636363636363636363636363635
35353535353535353535353535343434343434343434343434343434333333333333333333333333
33333332323232323232323232323232323131313131313131313131313131313030303030303030
3030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E
>
<
00010101010102020202030303030304040404050505050506060606060707070708080808080909
09090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F1010101010111111111212
12121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B
1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F202020202021212121222222222223232323
2424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B
>
1 %_Br
<
DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5
D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1
D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCC
CCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7
C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3
>
<
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B
>
<
1A1A1A1A1A1A19191919191919191818181818181817171717171717171616161616161615151515
15151515141414141414141313131313131313121212121212121211111111111111101010101010
10100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A
0A0A0A0A0A0A0A090909090909090908080808080808070707070707070706060606060606050505
05050505050404040404040403030303030303030202020202020202010101010101010000
>
1 %_Br
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
>
<
000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C
0D0D0D0D0E0E0E0F0F0F101010111111121212131313131414141515151616161717171818181819
19191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525
262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F3030303131313232
3232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E
>
<
EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4
F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8
F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
00000000010101010101010102020202020202030303030303030304040404040404050505050505
05050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F101010
10101010111111111111111112121212121212131313131313131314141414141414151515151515
15151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A
>
1 %_Br
<
00000000000000010101010101010101010101020202020202020202020202020303030303030303
03030303040404040404040404040404040505050505050505050505050606060606060606060606
06060707070707070707070707070708080808080808080808080809090909090909090909090909
0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F1010101010
10101010101010101111111111111111111111111212121212121212121212121213131313131313
131313131314141414141414141414
>
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFA
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEDEDED
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000
>
1 %_Br
[
0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS
%_0.000031 0.985199 0.157778 0.000031 1 50 100 Bs
0.997467 1 0.178775 0.168856 1 50 80 %_BS
%_0.997467 1 0.178775 0.168856 1 50 80 Bs
0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS
%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs
0.85388 0.242313 1 0.102846 1 50 40 %_BS
%_0.85388 0.242313 1 0.102846 1 50 40 Bs
0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS
%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs
0.000031 0.99472 1 0.001282 1 50 0 %_BS
%_0.000031 0.99472 1 0.001282 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 18)
(Unnamed gradient 18) 1 6 Bd
[
<
00000000000000010101010101010101010101020202020202020202020202020303030303030303
03030303040404040404040404040404040505050505050505050505050606060606060606060606
06060707070707070707070707070708080808080808080808080809090909090909090909090909
0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F1010101010
10101010101010101111111111111111111111111212121212121212121212121213131313131313
131313131314141414141414141414
>
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFA
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEDEDED
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000
>
1 %_Br
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
>
<
000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C
0D0D0D0D0E0E0E0F0F0F101010111111121212131313131414141515151616161717171818181819
19191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525
262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F3030303131313232
3232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E
>
<
EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4
F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8
F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
00000000010101010101010102020202020202030303030303030304040404040404050505050505
05050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F101010
10101010111111111111111112121212121212131313131313131314141414141414151515151515
15151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A
>
1 %_Br
<
DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5
D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1
D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCC
CCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7
C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3
>
<
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B
>
<
1A1A1A1A1A1A19191919191919191818181818181817171717171717171616161616161615151515
15151515141414141414141313131313131313121212121212121211111111111111101010101010
10100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A
0A0A0A0A0A0A0A090909090909090908080808080808070707070707070706060606060606050505
05050505050404040404040403030303030303030202020202020202010101010101010000
>
1 %_Br
<
C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCF
CFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDB
DBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7
E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4
F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
65666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDC
DDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3939393939393939393939393939393838383838
38383838383838383837373737373737373737373737373736363636363636363636363636363635
35353535353535353535353535343434343434343434343434343434333333333333333333333333
33333332323232323232323232323232323131313131313131313131313131313030303030303030
3030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E
>
<
00010101010102020202030303030304040404050505050506060606060707070708080808080909
09090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F1010101010111111111212
12121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B
1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F202020202021212121222222222223232323
2424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B
>
1 %_Br
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFB
FBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
>
<
2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D
2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A
2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A292929292929
29292929292929292929292929292929292929292929292929292929292929292929292929292929
292928282828282828282828282828
>
<
2B2B2B2B2A2A2A2A2A2A292929292929282828282827272727272726262626262625252525252524
24242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E
1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717
17171616161616161515151515151414141414131313131313121212121212111111111111101010
1010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A0909
09090909080808080808070707070707060606060606050505050505040404040404030303030303
020202020202010101010101000000
>
1 %_Br
[
0.000031 0.99472 1 0.001282 1 50 0 %_BS
%_0.000031 0.99472 1 0.001282 1 50 0 Bs
0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS
%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs
0.85388 0.242313 1 0.102846 1 50 40 %_BS
%_0.85388 0.242313 1 0.102846 1 50 40 Bs
0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS
%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs
0.997467 1 0.178775 0.168856 1 50 80 %_BS
%_0.997467 1 0.178775 0.168856 1 50 80 Bs
0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS
%_0.000031 0.985199 0.157778 0.000031 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 20)
(Unnamed gradient 20) 0 2 Bd
[
<
0001020303040506070708090A0B0C0C0D0E0F1011111213141516161718191A1B1B1C1D1E1F2020
212223242525262728292A2A2B2C2D2E2F2F3031323334343536373839393A3B3C3D3E3E3F404142
4343444546474848494A4B4C4D4D4E4F5051525253545556575758595A5B5B5C5D5E5F6060616263
646565666768696A6A6B6C6D6E6F6F7071727374747576777879797A7B7C7D7E7E7F808182838384
8586878888898A8B8C8D8D8E8F9091929293949596979798999A9B9C9C9D9E9FA0A1A1A2A3A4A5A6
A6A7A8A9AAABABACADAEAFB0B0B1B2B3B4B4B5B6B7B8B9B9BABBBCBDBEBEBF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353636373839393A3B3C
3C3D3E3F3F404142424344454546474848494A4B4B4C4D4E4E4F505151525354545556575758595A
5A5B5C5D5D5E5F606061626363646566666768696A6A6B6C6D6D6E6F707071727373747576767778
79797A7B7C7C7D7E7F7F808182828384858586878888898A8B8B8C8D8E8E8F909191929394949596
979798999A9A9B9C9D9D9E9FA0A1A1A2A3A4A4A5A6A7A7A8A9AAAAABACADAD
>
<
000101020304040506070708090A0A0B0C0D0D0E0F10101112131314151616171819191A1B1C1C1D
1E1E1F202121222324242526272728292A2A2B2C2D2D2E2F30303132333334353636373838393A3B
3B3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858
595A5B5B5C5D5E5E5F606161626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576
777878797A7B7B7C7D7E7E7F80818182838484858686878889898A8B8C8C8D8E8F8F909192929394
959596979898999A9B9B9C9D9E9E9FA0A1A1A2A3A3A4A5A6A6A7A8A9A9AAAB
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6
>
1 %_Br
[
0.75021 0.679683 0.670222 0.90164 1 50 100 %_BS
%_0.75021 0.679683 0.670222 0.90164 1 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 21)
(Unnamed gradient 21) 0 5 Bd
[
<
04050505050505050505050505060606060606060606060606070707070707070707070707070808
080808080808080808080809090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D
0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F
0F0F0F10101010101010101010101010101010101010101010111111111111111111111111111111
11111111111111111111111212121212121212121212121212121212121212121212121212121212
1212121212121212121213131313131313131313131313131313
>
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C6C5C4C3C2C1C0BF
BFBEBDBCBBBAB9B8B7B6B6B5B4B3B2B1B0AFAFAEADACABAAA9A8A8A7A6A5A4A3A3A2A1A09F9E9E9D
9C9B9A9A9998979696959493929291908F8F8E8D8C8B8B8A89888887868585848383828180807F7E
7E7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6A696868676766656564
64636262616160605F5E5E5D5D5C5C5B5B5A5A59595857575656555554545353535252515150504F
4F4E4E4E4D4D4C4C4B4B4B4A4A494949484848474746464645454544444443434343424242414141
41404040403F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D
>
<
FFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFA
FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000
>
1 %_Br
<
14141414141414141414141313131313131313131313131313131212121212121212121212121212
11111111111111111111111111111110101010101010101010101010100F0F0F0F0F0F0F0F0F0F0F
0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A09090909
09090909090909090909090808080808080808080808080808070707070707070707070707070707
060606060606060606060606060605050505050505050505050505050504
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5
>
<
EDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0
F0F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3
F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7
F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFA
FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFD
FDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
>
1 %_Br
<
1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D
1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B
1B1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A191919191919191919
19191919191919191919191918181818181818181818181818181818181818181717171717171717
17171717171717171717171717161616161616161616161616161616161616161615151515151515
1515151515151515151515151515141414141414
>
<
848382828181807F7F7E7E7D7C7C7B7B7A79797878777676757574737372727170706F6F6E6D6D6C
6C6B6A6A69696867676666656464636362616160605F5E5E5D5D5C5B5B5A5A595858575756555554
545352525151504F4F4E4E4D4C4C4B4B4A49494848474646454544434342424140403F3E3E3D3D3C
3B3B3A3A393838373736353534343332323131302F2F2E2E2D2C2C2B2B2A29292828272626252524
232322222120201F1F1E1D1D1C1C1B1A1A19191817171616151414131312111110100F0E0E0D0D0C
0B0B0A0A09080807070605050404030202010100
>
<
131415161718191A1B1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343536373839
3A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061
62636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F80818283848586878889
8A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1
B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9
DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECED
>
0.000031
1 %_Br
<
C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99
98979694939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776757473727170
6F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A4948
47464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120
1F
>
<
2E2F303031313232333334343535363637383839393A3A3B3B3C3C3D3D3E3E3F3F40414142424343
44444545464647474849494A4A4B4B4C4C4D4D4E4E4F4F5051515252535354545555565657575859
595A5A5B5B5C5C5D5D5E5E5F5F6060616262636364646565666667676868696A6A6B6B6C6C6D6D6E
6E6F6F707071727273737474757576767777787879797A7B7B7C7C7D7D7E7E7F7F80808181828383
84
>
<
424141414040403F3F3F3F3E3E3E3D3D3D3D3C3C3C3B3B3B3A3A3A3A393939383838383737373636
363535353534343433333333323232313131303030302F2F2F2E2E2E2E2D2D2D2C2C2C2B2B2B2B2A
2A2A292929292828282727272626262625252524242424232323222222212121212020201F1F1F1F
1E1E1E1D1D1D1C1C1C1C1B1B1B1A1A1A1A1919191818181817171716161615151515141414131313
13
>
0.000031
1 %_Br
[
0.073152 0.237522 0.969482 0.000031 1 50 100 %_BS
%_0.073152 0.237522 0.969482 0.000031 1 50 100 Bs
0.017517 0.897581 1 0.001343 1 35.5263 79.7753 %_BS
%_0.017517 0.897581 1 0.001343 1 35.5263 79.7753 Bs
0.079316 0.000031 0.930816 0.000031 1 50 55.618 %_BS
%_0.079316 0.000031 0.930816 0.000031 1 50 55.618 Bs
0.121096 0.516075 0.072572 0.000031 1 50 44.9438 %_BS
%_0.121096 0.516075 0.072572 0.000031 1 50 44.9438 Bs
0.751858 0.182254 0.256992 0.000031 1 50 19.1011 %_BS
%_0.751858 0.182254 0.256992 0.000031 1 50 19.1011 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 396)
(Unnamed gradient 396) 1 2 Bd
[
0.000031
0.000031
0.000031
0.000031
1 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 87 44.4444 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 87 44.4444 Bs
0.000031 0.000031 0.000031 0.000031 1 50 100 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 72)
(Unnamed gradient 72) 0 2 Bd
[
<
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD
CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD
CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECE
CECE
>
<
09090A0B0C0C0D0E0E0F10111112131414151617171819191A1B1C1C1D1E1F1F2021222223242425
26272728292A2A2B2C2D2D2E2F2F303132323334353536373838393A3A3B3C3D3D3E3F4040414242
4344454546474848494A4B4B4C4D4D4E4F50505152535354555656575858595A5B5B5C5D5E5E5F60
616162636364656666676869696A6B6C6C6D6E6E6F70717172737474757677777879797A7B7C7C7D
7E7F
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAFAFA
FAF9F9F9F9F9F9F9F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F5F5F5F5F5F5F5F4F4F4
F4F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0EFEFEFEFEFEF
EFEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDECECECECECECECEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAE9E9
E9E9
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041424344454647494A4B4C4D4E4F50
5152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778
797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0
A1A2
>
1 %_Br
[
0.806394 0.496437 0.913573 0.634302 1 50 98.3146 %_BS
%_0.806394 0.496437 0.913573 0.634302 1 50 98.3146 Bs
0.798978 0.033753 1 0.00119 1 50 0 %_BS
%_0.798978 0.033753 1 0.00119 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Fish Pattern)
(Fish Pattern) 77.5215 31.4824 155.3037 96.7959 [
%AI3_Tile
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 96.7959 m
157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c
154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c
153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c
156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 c
f
142.3477 90.6719 m
142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C
151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c
145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c
140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c
151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C
146.54 80.6494 142.3477 85.1709 142.3477 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 96.7959 m
79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c
76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c
75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c
78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 c
f
64.5654 90.6719 m
64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C
73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c
67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c
62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c
73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C
68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
13.874 64.1396 m
13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c
16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c
17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c
14.7539 66.1064 13.874 65.2266 13.874 64.1396 c
f
28.7969 58.0156 m
28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C
19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c
26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c
30.8857 52.1611 26.1396 47.416 20.2861 47.416 c
19.9326 47.416 19.585 47.4355 19.2412 47.4688 C
24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
91.6563 64.1396 m
91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c
94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c
95.5889 65.2266 94.709 66.1064 93.623 66.1064 c
92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 c
f
106.5781 58.0156 m
106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C
97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c
103.9219 68.6152 108.668 63.8691 108.668 58.0156 c
108.668 52.1611 103.9219 47.416 98.0684 47.416 c
97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C
102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 31.4824 m
157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c
154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c
153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c
156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 c
f
142.3477 25.3594 m
142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C
151.5596 35.9395 151.2109 35.959 150.8584 35.959 c
145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c
140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c
151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C
146.54 15.3359 142.3477 19.8574 142.3477 25.3594 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 31.4824 m
79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c
76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c
75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c
78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 c
f
64.5654 25.3594 m
64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C
73.7773 35.9395 73.4297 35.959 73.0762 35.959 c
67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c
62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c
73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C
68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 20)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-2589.5 7776.9751 m
-2375.8999 7776.9751 L
-2375.8999 7769.1743 L
-2589.5 7769.1743 L
-2589.5 7776.9751 L
n
0 O
0 0 0 1 k
-2589.5 7773.0752 m
-2579.4856 7775.5669 -2572.6863 7776.9155 -2560.7007 7776.9751 c
-2547.7185 7777.04 -2482.6997 7776.9751 y
-2417.6816 7777.04 -2404.6997 7776.9751 v
-2392.7124 7776.9155 -2385.9136 7775.5669 -2375.8999 7773.0752 C
-2385.9136 7770.5835 -2392.7124 7769.2354 -2404.6997 7769.1743 c
-2417.6816 7769.1089 -2482.6997 7769.1743 y
-2547.7185 7769.1089 -2560.7007 7769.1743 v
-2572.6863 7769.2354 -2579.4856 7770.5835 -2589.5 7773.0752 C
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 12)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-6462 11649.54 m
-6364.2451 11649.54 L
-6364.2451 11628.8242 L
-6462 11628.8242 L
-6462 11649.54 L
n
0 O
0 g
1 XR
-6364.5586 11644.8584 m
-6379.8247 11631.0703 -6397.5537 11651.9893 -6412.9277 11639.7061 C
-6411.4199 11634.0537 -6405.7598 11641.0078 -6403.5176 11636.3613 C
-6403.4341 11634.7607 -6406.6313 11636.2607 -6406.5127 11634.1406 C
-6404.6245 11630.7314 -6399.8955 11631.2285 -6398.5664 11635.2773 C
-6392.3115 11633.3076 -6385.7734 11627.3643 -6379.7847 11629.1572 C
-6378.2671 11630.5078 -6379.0708 11631.6914 -6378.6211 11632.9678 C
-6371.2871 11628.5322 -6362.4644 11637.6689 -6364.5586 11644.8584 C
f
-6408.2842 11646.4727 m
-6408.8247 11646.8486 -6407.9277 11647.96 -6408.2529 11648.4482 C
-6410.3237 11647.6963 -6412.6919 11643.6182 -6414.4731 11640.8506 C
-6414.2632 11642.3799 -6415.6641 11643.7041 -6417.0781 11641.4727 C
-6417.2383 11640.6553 -6416.3667 11640.3682 -6416.6729 11639.4766 C
-6417.8306 11637.9082 -6418.8472 11639.3936 -6419.7798 11639.166 C
-6420.3184 11638.4014 -6420.6143 11637.7588 -6420.6816 11637.2344 C
-6414.5537 11634.4141 -6407.9263 11646.2168 -6401.7456 11646.6426 C
-6401.9048 11649.6553 -6405.8555 11651.3408 -6408.2842 11646.4727 C
f
u
u
0 XR
-6405.1602 11641.2002 m
-6420.0142 11634.6602 -6441.4731 11638.8818 -6457.3687 11638.8594 c
-6463.2988 11638.8525 -6452.8965 11638.8613 -6458.8267 11638.8662 c
N
0 O
0 g
-6402.8052 11639.9795 m
-6420.1475 11632.8037 -6439.9341 11637.5957 -6458.0532 11637.5264 C
-6458.8608 11638.4131 -6459.6685 11639.3018 -6460.4751 11640.1875 C
-6459.6973 11640.1875 -6458.9194 11640.1865 -6458.1421 11640.1934 C
-6457.3345 11639.3057 -6456.5273 11638.4189 -6455.7202 11637.5322 C
-6456.3516 11637.543 -6456.9844 11637.5352 -6457.6157 11637.5352 c
-6459.3735 11637.5381 -6463.9165 11640.2021 -6460.0376 11640.1973 c
-6459.4063 11640.1973 -6458.7734 11640.2041 -6458.1421 11640.1934 c
-6456.4155 11640.167 -6451.8184 11637.5635 -6455.7202 11637.5322 c
-6456.4976 11637.5234 -6457.2759 11637.5264 -6458.0532 11637.5264 c
-6459.8081 11637.5254 -6464.3574 11640.1729 -6460.4751 11640.1875 c
-6443.1177 11640.2549 -6424.1025 11635.5537 -6407.5151 11642.4189 c
-6406.1035 11643.0039 -6400.8081 11640.8066 -6402.8052 11639.9795 c
-6402.8052 11639.9795 l
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 158)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-6462 11649.54 m
-6450.0078 11649.54 L
-6450.0078 11638.9033 L
-6462 11638.9033 L
-6462 11649.54 L
n
-6461.3218 11638.9033 m
-6461.3218 11642.8525 L
-6461.3218 11643.8877 L
-6461.3218 11644.5264 L
-6461.3218 11645.626 L
-6461.3218 11649.54 L
-6450.6865 11649.54 L
-6450.6865 11645.626 L
-6450.6865 11644.5264 L
-6450.6865 11643.8877 L
-6450.6865 11642.8525 L
-6450.6865 11638.9033 L
-6461.3218 11638.9033 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-6450.0078 11645.626 m
-6450.0078 11644.9795 L
-6462 11644.9814 L
-6462 11645.626 L
-6462 11645.6904 L
-6450.0078 11645.6895 L
-6450.0078 11645.626 L
f
-6450.0078 11642.8525 m
-6462 11642.8525 L
-6462 11643.5615 L
-6450.0078 11643.5615 L
-6450.0078 11642.8525 L
f
0.15 1 0.9 0.1 k
-6450.0078 11644.5918 m
-6462 11644.5918 L
-6462 11644.9814 L
-6450.0078 11644.9795 L
-6450.0078 11644.5918 L
f
-6450.0078 11643.8877 m
-6450.0078 11643.5615 L
-6462 11643.5615 L
-6462 11643.8877 L
-6462 11643.9521 L
-6450.0078 11643.9521 L
-6450.0078 11643.8877 L
f
0 1 1 0 k
-6450.0078 11644.5264 m
-6450.0078 11643.9521 L
-6462 11643.9521 L
-6462 11644.5264 L
-6462 11644.5918 L
-6450.0078 11644.5918 L
-6450.0078 11644.5264 L
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 160)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-6462 11648.3447 m
-6451.3638 11648.3447 L
-6451.3638 11637.709 L
-6462 11637.709 L
-6462 11648.3447 L
n
-6462 11637.709 m
-6462 11641.5986 L
-6462 11642.3086 L
-6462 11642.6914 L
-6462 11643.334 L
-6462 11643.7217 L
-6462 11644.4307 L
-6462 11648.3447 L
-6451.3638 11648.3447 L
-6451.3638 11637.709 L
-6462 11637.709 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-6455.9585 11649.54 m
-6455.2515 11649.54 L
-6455.2607 11644.4961 L
-6449.5229 11644.4951 L
-6449.5229 11643.7842 L
-6455.9707 11643.7871 L
-6455.9585 11649.54 L
f
-6457.6055 11642.0742 m
-6457.8696 11642.3369 -6458.0215 11642.7031 -6458.0215 11643.0762 C
-6458.0073 11649.54 L
-6457.2979 11649.54 L
-6457.3125 11643.0762 L
-6457.3125 11642.8896 -6457.2363 11642.709 -6457.1045 11642.5752 c
-6456.9717 11642.4434 -6456.7891 11642.3682 -6456.6021 11642.3682 C
-6449.5229 11642.3682 L
-6449.5229 11641.6582 L
-6456.6021 11641.6582 L
-6456.9761 11641.6582 -6457.3418 11641.8096 -6457.6055 11642.0742 c
f
0.15 1 0.9 0.1 k
-6456.2827 11649.54 m
-6455.9585 11649.54 L
-6455.9707 11643.7871 L
-6449.5229 11643.7842 L
-6449.5229 11643.3955 L
-6456.2827 11643.3955 L
-6456.2827 11649.54 L
f
-6457.1045 11642.5752 m
-6457.2363 11642.709 -6457.3125 11642.8896 -6457.3125 11643.0762 C
-6457.2979 11649.54 L
-6456.9219 11649.54 L
-6456.9219 11643.0762 L
-6456.9219 11642.9922 -6456.8877 11642.9111 -6456.8281 11642.8506 c
-6456.7695 11642.793 -6456.6865 11642.7588 -6456.6025 11642.7588 C
-6449.5229 11642.7588 L
-6449.5229 11642.3682 L
-6456.6021 11642.3682 L
-6456.7891 11642.3682 -6456.9717 11642.4434 -6457.1045 11642.5752 c
f
0 1 1 0 k
-6456.8281 11642.8506 m
-6456.8877 11642.9111 -6456.9219 11642.9922 -6456.9219 11643.0762 C
-6456.9219 11649.54 L
-6456.2827 11649.54 L
-6456.2827 11643.3955 L
-6449.5229 11643.3955 L
-6449.5229 11642.7588 L
-6456.6025 11642.7588 L
-6456.6865 11642.7588 -6456.7695 11642.793 -6456.8281 11642.8506 c
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 161)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-6462 11649.54 m
-6450.0078 11649.54 L
-6450.0078 11638.9033 L
-6462 11638.9033 L
-6462 11649.54 L
n
-6461.0117 11638.9033 m
-6461.0117 11642.8525 L
-6461.0117 11643.8877 L
-6461.0117 11644.5264 L
-6461.0117 11645.626 L
-6461.0117 11649.54 L
-6450.3765 11649.54 L
-6450.3765 11645.626 L
-6450.3765 11644.5264 L
-6450.3765 11643.8877 L
-6450.3765 11642.8525 L
-6450.3765 11638.9033 L
-6461.0117 11638.9033 L
n
0 O
0.15 1 0.9 0.1 k
-6450.0078 11644.5918 m
-6462 11644.5918 L
-6462 11644.9814 L
-6450.0078 11644.9795 L
-6450.0078 11644.5918 L
f
-6450.0078 11643.8877 m
-6450.0078 11643.5615 L
-6462 11643.5615 L
-6462 11643.8877 L
-6462 11643.9521 L
-6450.0078 11643.9521 L
-6450.0078 11643.8877 L
f
0 1 1 0 k
-6450.0078 11644.5264 m
-6450.0078 11643.9521 L
-6462 11643.9521 L
-6462 11644.5264 L
-6462 11644.5918 L
-6450.0078 11644.5918 L
-6450.0078 11644.5264 L
f
1 Ap
0.746094 0.675781 0.667969 0.898438 k
-6460.2715 11645.6904 m
-6462 11645.6904 L
-6462 11642.8525 L
-6460.2715 11642.8525 L
-6460.2715 11645.6904 L
f
0.15 1 0.9 0.1 k
-6459.5967 11645.6738 m
-6460.4492 11645.6738 L
-6460.4492 11642.8369 L
-6459.5967 11642.8369 L
-6459.5967 11645.6738 L
f
0 Ap
0.746094 0.675781 0.667969 0.898438 k
-6450.0078 11645.626 m
-6450.0078 11644.9795 L
-6462 11644.9814 L
-6462 11645.626 L
-6462 11645.6904 L
-6450.0078 11645.6895 L
-6450.0078 11645.626 L
f
-6450.0078 11642.8525 m
-6462 11642.8525 L
-6462 11643.5615 L
-6450.0078 11643.5615 L
-6450.0078 11642.8525 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 162)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-6462 11649.54 m
-6450.6099 11649.54 L
-6450.6099 11638.9033 L
-6462 11638.9033 L
-6462 11649.54 L
n
-6461.2461 11645.626 m
-6461.2461 11649.54 L
-6450.6099 11649.54 L
-6450.6099 11638.9033 L
-6461.2461 11638.9033 L
-6461.2461 11642.7949 L
-6461.2461 11645.626 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-6455.6245 11645.5615 m
-6455.6245 11644.918 L
-6462 11644.918 L
-6462 11645.5615 L
-6462 11645.626 L
-6455.6245 11645.626 L
-6455.6245 11645.5615 L
f
-6455.6245 11642.7881 m
-6462 11642.7881 L
-6462 11643.499 L
-6455.6245 11643.499 L
-6455.6245 11642.7881 L
f
0.15 1 0.9 0.1 k
-6455.6245 11644.5264 m
-6462 11644.5264 L
-6462 11644.918 L
-6455.6245 11644.918 L
-6455.6245 11644.5264 L
f
-6455.6245 11643.8232 m
-6455.6245 11643.499 L
-6462 11643.499 L
-6462 11643.8232 L
-6462 11643.8887 L
-6455.6245 11643.8887 L
-6455.6245 11643.8232 L
f
0 1 1 0 k
-6455.6245 11644.4609 m
-6455.6245 11643.8887 L
-6462 11643.8887 L
-6462 11644.4609 L
-6462 11644.5264 L
-6455.6245 11644.5264 L
-6455.6245 11644.4609 L
f
U
-6461.2461 11649.54 m
-6450.6099 11649.54 L
-6450.6099 11638.9033 L
-6461.2461 11638.9033 L
-6461.2461 11649.54 L
n
-6450.7241 11644.2217 m
-6458.8125 11648.8916 L
N
0 O
0.746094 0.675781 0.667969 0.898438 k
-6458.4814 11643.5 m
-6458.4814 11640.6807 L
-6452.3535 11644.2178 L
-6458.4814 11647.7559 L
-6458.4814 11644.918 L
-6458.8125 11644.918 L
-6458.8125 11645.626 L
-6458.8125 11648.8916 L
-6450.7241 11644.2217 L
-6458.8125 11639.5527 L
-6458.8125 11642.792 L
-6458.8125 11643.5 L
-6458.4814 11643.5 L
f
0.15 1 0.9 0.1 k
-6458.4814 11647.7559 m
-6452.3535 11644.2178 L
-6458.4814 11640.6807 L
-6458.4814 11643.5 L
-6458.4814 11643.8877 L
-6458.3472 11643.8877 L
-6458.2148 11643.5156 -6457.8633 11643.2471 -6457.4453 11643.2471 c
-6456.9155 11643.2471 -6456.4849 11643.6768 -6456.4849 11644.208 c
-6456.4849 11644.7373 -6456.9155 11645.168 -6457.4453 11645.168 c
-6457.8633 11645.168 -6458.2148 11644.8994 -6458.3472 11644.5264 C
-6458.4814 11644.5264 L
-6458.4814 11644.918 L
-6458.4814 11647.7559 L
f
0 1 1 0 k
-6457.4453 11645.168 m
-6456.9155 11645.168 -6456.4849 11644.7373 -6456.4849 11644.208 c
-6456.4849 11643.6768 -6456.9155 11643.2471 -6457.4453 11643.2471 c
-6457.8633 11643.2471 -6458.2148 11643.5156 -6458.3472 11643.8877 c
-6458.3828 11643.9873 -6458.4058 11644.0938 -6458.4058 11644.208 c
-6458.4058 11644.3193 -6458.3828 11644.4248 -6458.3472 11644.5264 c
-6458.2148 11644.8994 -6457.8633 11645.168 -6457.4453 11645.168 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-6461.8833 11649.4951 m
-6370.0479 11649.4951 L
-6370.0479 11645.2158 L
-6461.8833 11645.2158 L
-6461.8833 11649.4951 L
n
0 O
0 0 0 1 k
-6461.6631 11646.8154 m
-6462 11646.8818 -6461.4814 11647.0713 -6461.8833 11646.9287 C
-6461.8379 11646.8105 -6461.7725 11646.7217 -6461.6631 11646.8154 C
f
-6371.1675 11646.9814 m
-6372.2524 11647.7441 -6373.6816 11646.9736 -6374.8701 11647.46 C
-6375.0098 11647.4922 -6374.8345 11647.043 -6375.1484 11647.1426 C
-6376.3008 11647.7354 -6378.1162 11647.3818 -6379.5195 11646.9248 C
-6379.4346 11646.8066 L
-6379.7017 11646.7217 -6380.0283 11647.1123 -6380.3115 11647.0576 C
-6380.3135 11646.9795 -6380.2207 11646.9463 -6380.2861 11646.8389 C
-6380.3574 11647.0752 -6380.7983 11646.9482 -6380.9185 11647.125 C
-6381.0303 11647.0322 -6381.0195 11646.8447 -6381.1641 11646.7412 C
-6381.3262 11647.0098 L
-6381.7769 11647.6494 -6382.4209 11646.9658 -6383.0361 11647.2959 C
-6383.0063 11647.2334 -6382.9453 11647.1846 -6382.9941 11647.125 C
-6383.9814 11647.5127 -6385.2168 11647.4404 -6386.3208 11647.584 C
-6386.2769 11647.4883 -6386.2363 11647.3154 -6386.3008 11647.209 C
-6386.3555 11647.4912 -6386.6963 11647.5625 -6386.9922 11647.6182 C
-6387.1255 11647.3271 -6387.4995 11647.8838 -6387.8467 11647.7236 C
-6387.8169 11647.6592 L
-6388.0732 11647.9639 -6388.1973 11647.4834 -6388.4053 11647.8486 C
-6388.5684 11647.6201 L
-6388.6807 11648.0303 -6388.9395 11647.4072 -6389.1514 11647.6162 C
-6389.1445 11647.7002 L
-6389.3442 11647.7998 -6389.4482 11647.5938 -6389.6338 11647.6631 C
-6389.6514 11647.6162 L
-6390.0854 11647.7236 -6390.3379 11647.4951 -6390.3271 11647.8154 C
-6390.4795 11647.5586 -6389.9063 11647.6982 -6390.1455 11647.3252 C
-6391.5732 11647.6553 -6393.0459 11647.5908 -6394.4834 11647.5967 C
-6394.6465 11647.4678 -6394.7505 11647.4287 -6394.7871 11647.3076 C
-6394.9307 11647.3721 -6395.3281 11647.3662 -6395.4585 11647.5303 C
-6395.4102 11647.5234 -6395.5513 11647.3662 -6395.6274 11647.3506 C
-6395.8887 11647.2295 -6395.9131 11647.7021 -6396.2002 11647.5586 C
-6396.0859 11647.4736 -6396.0469 11647.3701 -6396.0854 11647.252 C
-6396.3301 11647.502 -6396.6577 11647.4609 -6396.9473 11647.543 C
-6396.9023 11647.4883 -6396.8325 11647.4561 -6396.8433 11647.3555 C
-6397.1602 11647.6387 -6397.4209 11647.2959 -6397.6982 11647.4746 C
-6397.5947 11647.29 L
-6398.0415 11647.0654 -6397.7266 11647.6768 -6398.1128 11647.5439 C
-6398.02 11647.4854 -6398.0527 11647.4131 -6398.0361 11647.3379 C
-6398.3965 11647.6738 -6398.9795 11647.5625 -6399.3389 11647.6768 C
-6399.3174 11647.6514 -6399.3232 11647.6006 Y
-6399.7148 11647.6426 -6400.1245 11647.5381 -6400.5552 11647.6846 C
-6400.7119 11647.6025 -6400.5039 11647.2334 -6400.9185 11647.3018 C
-6400.9033 11647.6729 -6401.6221 11647.4541 -6401.3779 11647.875 C
-6401.7319 11647.8135 -6402.2925 11647.6738 -6402.5283 11647.7998 C
-6402.3691 11647.6592 -6402.7007 11647.3467 -6402.4063 11647.3154 C
-6402.6289 11647.0898 L
-6402.5957 11646.9385 -6402.3999 11647.1416 -6402.4707 11646.9502 C
-6402.6182 11646.9658 -6403.0479 11647.1123 -6403.1797 11647.0518 C
-6403.4531 11647.2793 -6403.7041 11647.7041 -6404.1465 11647.752 C
-6403.9385 11647.6064 -6404.2646 11647.3418 -6404.1235 11647.2783 C
-6404.7407 11647.9893 L
-6404.8877 11648.0068 -6404.7725 11647.6963 -6404.9854 11647.7939 C
-6404.9746 11647.8916 -6405.0674 11647.9521 -6405.1318 11648.0322 C
-6405.1875 11647.9893 -6405.7441 11648.125 -6405.8081 11647.7588 C
-6405.8735 11647.6162 -6405.5684 11647.6826 -6405.7314 11647.5518 C
-6406.0029 11647.5557 -6406.0151 11647.6807 -6406.2871 11647.6865 C
-6406.2925 11647.6377 L
-6406.4717 11647.584 -6406.8213 11647.7939 -6406.6265 11647.9951 C
-6406.5015 11648.0068 -6406.6738 11647.7754 -6406.4888 11647.8818 C
-6406.6152 11648.0938 -6406.9312 11648.1533 -6407.2031 11648.1572 C
-6407.1104 11648.0986 -6407.1216 11648.002 -6407.0845 11647.8975 C
-6407.4497 11648.1846 -6407.8369 11648.2754 -6408.2451 11648.3955 C
-6408.2515 11648.5693 -6408.0928 11648.0791 -6408.0327 11648.1709 C
-6408.5557 11647.9297 -6409.1128 11648.5127 -6409.5479 11648.1602 C
-6409.4766 11648.1299 -6409.5098 11648.4072 -6409.5146 11648.3584 C
-6409.7666 11648.3369 -6409.7549 11648.0859 -6409.9189 11648.1777 C
-6409.9355 11648.0303 -6410.1255 11648.2256 -6410.2944 11648.2705 C
-6410.3818 11648.3779 -6410.3384 11648.1982 -6410.1914 11648.1826 C
-6410.4268 11648.3076 -6411.3691 11648.5342 -6411.9131 11648.3193 C
-6411.9023 11648.418 -6412.2471 11648.6777 -6412.3721 11648.668 C
-6412.3232 11648.4385 L
-6412.4375 11648.3018 -6412.7422 11648.459 -6412.7632 11648.2627 C
-6413.0303 11648.54 -6411.7344 11648.0264 -6412.0957 11648.2402 C
-6412.1895 11648.0498 -6412.5991 11648.6045 -6412.5215 11648.2939 C
-6412.7725 11648.3018 -6413.0161 11648.5586 -6413.2559 11648.3447 C
-6413.1865 11648.3818 -6413.0522 11648.0273 -6413.2549 11648.0439 C
-6413.6123 11648.0859 -6413.3564 11648.1533 -6413.6465 11648.2295 C
-6413.8281 11648.3232 L
-6413.8398 11648.5459 -6414.1475 11648.2939 -6414.0146 11648.543 C
-6414.0586 11648.3584 -6414.5337 11648.6553 -6414.4971 11648.2861 C
-6414.4473 11647.9951 L
-6414.6016 11648.0166 -6414.7002 11648.3018 -6414.8213 11648.4297 C
-6414.8418 11648.4033 -6414.8823 11648.3447 -6414.8745 11648.2979 C
-6414.8994 11648.7432 -6415.2432 11648.2607 -6415.4268 11648.6045 C
-6415.7505 11648.4502 -6416.2495 11648.5908 -6416.4023 11648.3135 C
-6416.6514 11648.4482 -6416.8784 11648.6084 -6417.1621 11648.5127 C
-6417.1055 11648.4707 -6417.0283 11648.459 -6417.0122 11648.3623 C
-6417.1904 11648.2314 -6417.2344 11648.3486 -6417.3975 11648.4209 C
-6417.3608 11648.3545 -6417.7539 11648.1602 -6417.9521 11648.0029 C
-6418.1992 11648.1357 -6418.1143 11648.377 -6418.1392 11648.5225 C
-6418.3652 11648.084 -6418.8379 11648.8057 -6419.1211 11648.4072 C
-6419.0352 11648.3467 -6418.7598 11648.1914 -6418.9658 11648.0811 C
-6419.1919 11647.6426 -6419.4219 11648.4053 -6419.7861 11648.1943 C
-6419.6968 11648.5586 L
-6419.8594 11648.334 -6420.2334 11648.7705 -6420.1963 11648.3994 C
-6420.3184 11648.5303 -6420.6265 11648.2783 -6420.5859 11648.6338 C
-6421.1846 11648.334 -6422.0425 11648.8154 -6422.4102 11648.1777 C
-6422.4961 11648.2373 -6422.7104 11648.1768 -6422.6665 11648.3594 C
-6422.5239 11648.5576 -6422.4673 11648.2178 -6422.4141 11648.3525 C
-6422.4912 11648.3633 -6422.5078 11648.4609 -6422.5161 11648.5098 C
-6422.7021 11648.4287 -6422.8486 11648.4033 -6422.6729 11648.1074 C
-6423.0869 11647.8877 -6423.1001 11648.7119 -6423.6274 11648.5732 C
-6423.6035 11648.4258 -6423.6436 11648.3701 -6423.7979 11648.3936 C
-6424.0903 11648.6455 L
-6424.4312 11648.5869 -6424.2842 11648.3105 -6424.2925 11648.0615 C
-6424.4746 11648.1045 -6424.6973 11648.0928 -6424.7803 11648.2783 C
-6425.0015 11647.9658 L
-6424.8398 11648.1914 -6425.1514 11648.1162 -6425.2368 11648.1768 C
-6425.1514 11648.1162 L
-6425.1846 11648.0098 -6425.3955 11648.0752 -6425.5024 11648.1064 C
-6425.4766 11648.2607 -6425.2617 11648.3232 -6425.1445 11648.3682 C
-6425.2373 11648.4775 -6425.3823 11648.4521 -6425.5059 11648.5811 C
-6425.4648 11648.3369 -6425.8027 11648.4072 -6425.9473 11648.3818 C
-6426.1133 11648.3291 -6426.1348 11648.6006 -6426.1831 11648.5928 C
-6426.1875 11648.4658 -6426.4541 11648.5713 -6426.3247 11648.3936 C
-6426.2681 11648.3525 -6426.1953 11648.5166 -6426.1016 11648.4053 C
-6426.2109 11648.3105 -6426.1982 11648.0898 -6426.4258 11648.252 C
-6426.5967 11648.3721 -6426.3818 11648.7334 -6426.7061 11648.5791 C
-6426.6211 11648.5186 -6426.6055 11648.4209 -6426.5391 11648.334 C
-6426.8433 11648.2061 L
-6426.8564 11648.4287 L
-6426.8975 11648.3721 -6426.8691 11648.3525 -6426.8877 11648.3232 C
-6426.9785 11648.5576 -6427.3521 11648.3955 -6427.4209 11648.6592 C
-6427.5742 11648.6826 -6427.7441 11648.5049 -6427.8906 11648.4795 C
-6427.8623 11648.46 L
-6428.0415 11648.3291 -6428.2793 11648.416 -6428.4297 11648.5654 C
-6428.4219 11648.5166 L
-6428.5195 11648.5 -6428.7505 11648.5342 -6428.8735 11648.666 C
-6429.1201 11648.4971 -6428.9561 11647.8242 -6429.2295 11648.1045 C
-6429.48 11648.1123 -6429.6221 11648.5127 -6429.5215 11648.6553 C
-6429.9717 11648.5049 -6430.4834 11648.8682 -6430.9009 11648.5225 C
-6430.9658 11648.6123 -6430.9248 11648.6689 -6431.0586 11648.7217 C
-6431.7197 11648.6338 -6432.4551 11648.9854 -6432.9814 11648.5479 C
-6432.79 11648.4541 -6432.9688 11648.3252 -6432.9727 11648.1982 C
-6433.1309 11648.3975 -6433.1631 11647.9912 -6433.2197 11648.334 C
-6433.2041 11648.5342 -6433.2197 11648.6318 -6433.0337 11648.7129 C
-6433.4282 11648.8213 -6434.0283 11648.8213 -6434.2471 11648.6338 C
-6434.1377 11648.7266 -6434.2227 11648.7881 -6434.3086 11648.8486 C
-6434.2803 11648.5273 -6434.5713 11648.4795 -6434.7915 11648.5928 C
-6434.8223 11648.7881 L
-6434.9658 11648.5869 L
-6435.0503 11648.6494 -6435.0591 11648.9971 -6435.2773 11648.8096 C
-6435.2891 11648.7334 -6435.3018 11648.6563 -6435.3418 11648.6006 C
-6435.5693 11648.7607 -6435.8906 11649.0322 -6436.1377 11648.8662 C
-6436.3398 11648.5811 L
-6436.4453 11648.6123 -6436.6235 11648.7842 -6436.4375 11648.8662 C
-6436.8594 11648.6943 -6437.1309 11648.6729 -6437.2646 11648.4258 C
-6437.9912 11649.0273 -6439.0459 11649.0518 -6439.8906 11649.0088 C
-6439.8652 11648.8623 L
-6440.0923 11648.7256 -6439.9834 11649.1182 -6440.1416 11649.0166 C
-6440.0684 11648.8779 -6440.3145 11648.7129 -6440.1362 11648.543 C
-6440.4609 11648.3877 -6440.5547 11648.7959 -6440.7656 11648.8623 C
-6440.7979 11649.0547 -6440.5957 11648.7393 -6440.6367 11648.9834 C
-6440.6729 11649.0518 -6441.0859 11648.834 -6441.1362 11649.125 C
-6441.2178 11649.0098 -6441.1543 11648.7959 -6441.1104 11648.6777 C
-6441.3086 11648.8193 L
-6441.5513 11648.4795 -6440.7559 11648.2119 -6441.0107 11647.7939 C
-6441.1934 11647.8389 L
-6441.3682 11647.5342 -6440.71 11647.4951 -6441.1689 11647.3906 C
-6441.3682 11647.5342 -6441.5381 11647.9561 -6441.3608 11648.0859 C
-6441.7754 11648.166 -6441.5527 11648.7783 -6441.9985 11648.7539 C
-6442.1201 11648.584 -6441.6416 11648.7129 -6441.7275 11648.4736 C
-6441.9375 11648.2393 -6442.1484 11648.6045 -6442.3354 11648.5225 C
-6442.1279 11648.6318 -6442.3032 11648.9258 -6442.4375 11648.9795 C
-6442.6641 11648.8418 -6442.29 11648.7041 -6442.6113 11648.6738 C
-6442.6641 11648.8418 -6442.9595 11648.9678 -6442.7041 11649.0859 C
-6442.8203 11649.4658 -6443.0381 11648.9795 -6443.2129 11649.2744 C
-6443.3174 11649.0068 -6442.8823 11648.6553 -6443.2354 11648.5215 C
-6443.1792 11648.7793 -6443.6704 11648.8721 -6443.4839 11649.2549 C
-6443.6221 11649.1807 -6443.6367 11648.9775 -6443.5361 11648.8193 C
-6443.7334 11648.6602 -6444.0151 11649.29 -6444.0801 11648.7783 C
-6444.1479 11649.043 L
-6444.21 11648.9561 -6444.2983 11648.8916 -6444.3994 11648.75 C
-6444.5732 11648.7441 -6444.96 11649.1064 -6444.9443 11648.709 C
-6445 11648.75 -6445.3975 11648.7314 -6445.2441 11649.0068 C
-6444.9971 11649.1748 -6444.96 11648.8057 -6444.8223 11649.1777 C
-6444.9971 11648.875 -6445.1787 11649.2178 -6445.3213 11649.3193 C
-6445.3447 11649.166 L
-6445.4297 11649.2256 -6445.6255 11649.1914 -6445.6787 11649.3584 C
-6445.6133 11649.2705 -6445.6475 11649.166 -6445.7148 11649.1279 C
-6445.8042 11649.3623 L
-6446.1494 11649.4795 -6445.8857 11648.9502 -6446.2217 11649.0186 C
-6445.9663 11648.8369 L
-6446.0225 11648.877 -6446.1367 11648.6563 -6446.2979 11648.7295 C
-6446.3604 11648.9434 -6446.4775 11649.2002 -6446.5313 11649.3662 C
-6446.7207 11649.46 -6446.6162 11649.126 -6446.8027 11649.3447 C
-6446.5586 11649.0869 L
-6446.5215 11649.0166 -6446.7231 11648.7334 -6446.9761 11648.7393 C
-6447.1377 11648.8135 -6447.3887 11649.1221 -6447.1338 11649.2393 C
-6447.2607 11649.2432 -6447.4385 11649.1123 -6447.3379 11648.9561 C
-6447.6255 11649.0303 -6447.2998 11649.1865 -6447.5479 11649.3193 C
-6447.6494 11649.1768 -6447.9658 11648.9736 -6448.1563 11648.7666 C
-6447.8975 11648.4082 L
-6448.0693 11648.4053 L
-6447.8467 11648.1182 -6448.1826 11648.1865 -6448.0566 11647.8838 C
-6448.1743 11647.8369 -6448.3169 11647.9395 -6448.4307 11648.0186 C
-6448.0864 11648.5029 -6448.8159 11648.6807 -6448.7158 11649.1221 C
-6449.1875 11649.2432 -6449.0107 11648.0479 -6449.5024 11648.7393 C
-6449.4219 11648.8545 -6449.6533 11649.1904 -6449.3564 11649.0625 C
-6449.6494 11649.0146 -6449.5557 11649.5059 -6449.9014 11649.3232 C
-6449.6455 11649.1416 -6450.1763 11648.877 -6449.8066 11648.6123 C
-6449.8311 11648.7588 -6449.6001 11648.7236 -6449.5435 11648.6826 C
-6449.6641 11648.5127 -6449.5186 11648.2373 -6449.8184 11648.2373 C
-6450.0015 11648.2793 -6450.2524 11648.2881 -6450.2158 11648.5186 C
-6450.2085 11648.7715 -6449.9365 11648.4912 -6450.0537 11648.7471 C
-6450.4185 11648.8359 -6450.4795 11648.4502 -6450.6304 11648.8994 C
-6450.3999 11648.8633 -6450.3423 11649.125 -6450.3467 11649.2979 C
-6450.6143 11649.4033 L
-6450.5625 11649.2354 L
-6450.9922 11649.1143 -6450.6895 11649.54 -6451.1055 11649.4951 C
-6451.3008 11649.1631 L
-6451.2017 11648.8779 -6450.6953 11649.29 -6450.7695 11648.8242 C
-6451.04 11648.8057 -6451.1299 11649.043 -6451.3848 11648.9219 C
-6451.3281 11648.8818 -6451.2505 11648.8701 -6451.1943 11648.8291 C
-6451.2915 11648.8135 -6451.3877 11648.1963 -6451.7734 11648.5576 C
-6451.9727 11648.6982 -6451.8262 11648.7236 -6451.8311 11648.8975 C
-6452.2656 11648.9502 -6452.3955 11649.1279 -6452.6753 11649.1553 C
-6452.6177 11648.8154 -6453.1699 11649.1221 -6452.8608 11648.7744 C
-6452.7188 11648.9736 -6452.0903 11648.9541 -6451.9365 11648.6299 C
-6452.0947 11648.2266 -6451.5952 11648.6865 -6451.5024 11648.2783 C
-6451.8506 11648.2686 -6451.8335 11647.8721 -6451.8896 11647.6123 C
-6451.9863 11647.5938 -6452.0801 11647.7041 -6452.1377 11647.7441 C
-6452.1787 11647.9893 -6452.0522 11647.9854 -6452.0449 11648.2373 C
-6452.4336 11648.1709 -6452.8081 11648.3076 -6453.0225 11648.5459 C
-6453.1523 11648.4248 -6453.1113 11648.1807 -6452.9575 11648.1572 C
-6453.4199 11648.2295 -6453.9141 11648.1963 -6454.3535 11648.1221 C
-6454.0693 11648.5215 -6454.8433 11648.2158 -6454.6494 11648.5479 C
-6454.4141 11648.6377 -6454.2119 11648.9219 -6454.3418 11649.1006 C
-6454.4888 11649.0752 -6454.3369 11648.9258 -6454.3984 11648.8408 C
-6454.5859 11649.0586 -6454.6895 11648.4912 -6454.8735 11648.8359 C
-6454.4512 11648.7061 -6454.7915 11648.3486 -6454.7139 11648.0361 C
-6455.0186 11648.2119 -6454.7007 11647.8135 -6455.0024 11647.8135 C
-6455.3057 11647.9873 -6455.6787 11648.125 -6456.0161 11648.1914 C
-6456.4399 11647.8955 -6457.0898 11648.1865 -6457.4683 11648.1982 C
-6457.6665 11648.04 -6457.5322 11647.6865 -6457.7471 11647.626 C
-6457.9995 11647.6318 -6457.5601 11648.0068 -6457.9336 11647.8447 C
-6457.8975 11647.7744 L
-6458.0107 11647.8564 -6458.5825 11647.5342 -6458.6929 11648.043 C
-6458.5776 11647.6592 L
-6458.6475 11647.625 -6458.7119 11647.7119 -6458.7695 11647.7529 C
-6458.7725 11647.6279 -6458.8535 11647.5146 -6458.7402 11647.4326 C
-6458.9707 11647.1689 -6459.2241 11647.4746 -6459.4746 11647.4854 C
-6459.3135 11647.7119 L
-6459.7422 11647.8896 -6460.0293 11647.666 -6460.4443 11647.7441 C
-6460.4316 11647.5225 L
-6460.6787 11647.6553 L
-6460.6182 11647.4404 -6460.8447 11647.3018 -6460.9751 11647.4814 C
-6460.3335 11646.9385 L
-6460.1553 11647.0693 -6460.5283 11647.2061 -6460.4165 11647.4248 C
-6460.3213 11647.6162 -6459.9375 11647.5557 -6459.8755 11647.3418 C
-6460.0225 11647.3174 -6460.0293 11647.3662 -6460.1436 11647.4463 C
-6460.1919 11647.1377 -6459.9688 11647.1494 -6459.8584 11646.9434 C
-6459.9355 11646.9561 -6460.0449 11646.8623 -6460.0615 11646.96 C
-6459.9102 11646.8096 -6459.7578 11646.7861 -6459.5059 11646.7783 C
-6459.6763 11646.8994 -6459.4131 11646.9697 -6459.4775 11647.0576 C
-6459.4575 11646.7861 -6459.2168 11646.7021 -6458.9053 11646.7783 C
-6458.6831 11647.0928 -6458.3208 11646.5762 -6457.96 11646.6631 C
-6458.1064 11646.9385 -6458.2935 11647.1592 -6458.5127 11647.2705 C
-6458.2861 11647.4082 -6458.2607 11647.2627 -6458.0337 11647.4014 C
-6457.9238 11647.1963 -6457.8457 11646.8818 -6457.5503 11646.7568 C
-6457.5342 11646.96 L
-6457.2666 11646.8564 -6457.2666 11646.5557 -6456.9258 11646.6123 C
-6456.3418 11646.7119 -6455.7407 11646.7119 -6455.2949 11646.7373 C
-6455.2783 11646.9395 L
-6455.0303 11646.5059 -6454.4521 11646.7793 -6454.1182 11646.5869 C
-6453.5503 11646.7822 -6452.8848 11646.3936 -6452.5938 11646.7432 C
-6451.5913 11646.5869 -6450.7148 11646.4346 -6449.6768 11646.5088 C
-6449.8516 11646.8037 L
-6449.6655 11646.5869 -6449.7305 11646.9736 -6449.5479 11646.9297 C
-6449.7578 11646.6943 -6449.2949 11646.625 -6449.1665 11646.4434 C
-6448.7041 11646.6729 -6448.1104 11646.4229 -6447.7007 11646.2158 C
-6447.6846 11646.4189 L
-6447.2705 11646.0381 -6446.7759 11646.3721 -6446.2598 11646.4346 C
-6446.2007 11646.5186 -6446.1074 11646.71 -6445.9536 11646.6865 C
-6445.6738 11646.3584 -6445.5273 11646.3818 -6445.1167 11646.1768 C
-6444.8169 11646.1768 -6444.3301 11646.2578 -6444.0254 11646.3857 C
-6442.8975 11645.9248 -6441.7456 11646.2197 -6440.5732 11645.9424 C
-6440.4888 11646.1807 L
-6439.3521 11645.6709 -6437.9541 11646.1338 -6436.9839 11645.8721 C
-6437.0776 11646.2793 L
-6436.7734 11646.4053 -6436.3843 11646.1729 -6436.4619 11645.8838 C
-6436.1567 11646.0088 -6435.7007 11645.6865 -6435.5068 11646.0215 C
-6435.1953 11646.0967 -6435.1255 11645.834 -6434.8662 11645.7783 C
-6434.2422 11645.9326 -6434.0107 11645.8975 -6433.4224 11645.8213 C
-6433.5684 11645.7959 L
-6433.6328 11645.8857 -6433.6387 11646.0586 -6433.4922 11646.0859 C
-6433.2725 11645.9717 -6432.6846 11646.1943 -6432.9033 11645.709 C
-6432.2754 11645.9893 -6431.4385 11645.4795 -6430.8271 11645.8584 C
-6430.8789 11645.7256 -6430.7246 11645.7002 -6430.6602 11645.6104 C
-6430.1089 11645.6045 -6429.5293 11645.877 -6429.0898 11645.6494 C
-6429.0024 11645.7158 -6429.2295 11645.877 -6429.0049 11645.8896 C
-6428.8721 11645.8389 -6429.0024 11645.7158 -6428.8384 11645.6416 C
-6427.9453 11645.3936 -6427.0303 11645.8975 -6426.2188 11645.834 C
-6424.7754 11645.5762 -6423.2695 11645.7061 -6421.8867 11645.6631 C
-6421.9023 11645.7607 L
-6421.4395 11645.3877 -6420.8159 11646.1426 -6420.4463 11645.5811 C
-6420.3369 11645.6738 -6420.0283 11645.626 -6420.1094 11645.8135 C
-6419.7407 11645.5498 -6419.0771 11646.0615 -6418.5439 11645.7266 C
-6418.5928 11645.7178 -6418.6211 11645.7373 -6418.6777 11645.7793 C
-6418.1392 11645.9951 -6417.6641 11645.7002 -6417.0957 11645.8955 C
-6417.1533 11645.9375 -6417.2583 11645.9678 -6417.2754 11646.0654 C
-6417.0557 11646.2529 -6416.7549 11645.6533 -6416.6348 11646.125 C
-6416.5088 11646.1201 -6416.5449 11645.8877 -6416.6221 11645.9014 C
-6415.3779 11646.0859 -6414.0498 11645.7842 -6412.7549 11645.6768 C
-6411.8271 11645.959 -6412.6982 11646.4697 -6411.9663 11646.1182 C
-6411.9063 11646.21 -6411.9229 11645.9385 -6411.9131 11646.0361 C
-6411.6299 11645.9043 -6411.4717 11646.5615 -6411.2754 11646.3154 C
-6411.3564 11646.0264 -6411.1445 11646.1533 -6411.1387 11645.9775 C
-6410.5713 11646.166 -6410.4575 11646.4258 -6410.0098 11646.2061 C
-6410.0435 11646.3584 L
-6409.5186 11645.9287 -6408.9102 11646.1592 -6408.4673 11645.6631 C
-6405.5728 11645.5732 -6402.7983 11645.2979 -6399.9761 11645.2402 C
-6397.1865 11645.3359 -6394.4551 11645.1123 -6391.6221 11645.377 C
-6390.9585 11645.7754 -6390.9087 11645.7646 -6390.1797 11645.6025 C
-6390.2095 11645.668 -6390.2549 11645.6826 -6390.2061 11645.7432 C
-6390.1699 11645.416 -6389.6929 11645.7119 -6389.6235 11645.3994 C
-6388.5762 11645.46 -6387.6113 11645.3701 -6386.5337 11645.3682 C
-6386.7041 11645.4033 -6386.7896 11645.6709 -6386.5869 11645.6494 C
-6386.3755 11645.4404 L
-6386.3408 11645.5322 L
-6386.2021 11645.4834 -6386.0513 11645.3213 -6386.1943 11645.2158 C
-6383.4873 11644.9326 -6380.8242 11645.5908 -6378.1729 11645.5098 C
-6377.5435 11645.6465 -6376.6475 11645.5215 -6375.9629 11645.4541 C
-6373.9355 11645.8916 -6372.1079 11646.2441 -6370.0479 11645.9385 C
-6370.3169 11646.7861 -6371.1675 11646.9814 V
f
-6461.2578 11646.7822 m
-6461.1855 11646.9463 -6460.9497 11647.0361 -6461.1377 11647.2549 C
-6461.1611 11647.1006 -6461.2822 11646.9287 -6461.2578 11646.7822 C
f
-6454.9619 11648.4697 m
-6454.9536 11648.4209 -6454.8721 11648.5361 -6454.8521 11648.5625 C
-6454.9297 11648.5752 -6455.0024 11648.7129 -6455.0645 11648.6279 C
-6454.9854 11648.6162 -6454.9976 11648.5381 -6454.9619 11648.4697 C
f
-6453.3521 11648.5674 m
-6453.3765 11648.7129 -6453.7207 11648.8291 -6453.9238 11648.8467 C
-6453.3521 11648.5674 L
f
-6451.8521 11649.1689 m
-6451.7227 11649.293 -6451.7583 11649.3594 -6451.9326 11649.3555 C
-6451.9453 11649.2783 -6451.8877 11649.2393 -6451.8521 11649.1689 C
f
-6451.7456 11648.8369 m
-6451.6211 11648.834 -6451.5591 11648.9189 -6451.4985 11649.0029 C
-6451.5029 11648.8779 -6451.7871 11649.0811 -6451.7456 11648.8369 C
f
-6448.4893 11649.2607 m
-6448.4111 11649.25 -6448.2417 11649.1279 -6448.1689 11649.29 C
-6448.2505 11649.1768 -6448.5498 11649.4746 -6448.4893 11649.2607 C
f
-6446.9761 11649.04 m
-6446.9272 11649.0498 -6446.9072 11649.0762 -6446.8506 11649.0361 C
-6446.7607 11649.1025 -6446.8555 11649.21 -6446.9312 11649.2227 C
-6446.9761 11649.04 L
f
-6419.4287 11648.4541 m
-6419.5923 11648.5264 L
-6419.5684 11648.3818 L
-6419.4287 11648.4541 L
f
-6407.3574 11648.4463 m
-6407.1943 11648.3545 -6407.2441 11648.584 -6407.2168 11648.6045 C
-6407.3643 11648.6201 -6407.1621 11648.4248 -6407.3574 11648.4463 C
f
-6400.8486 11647.7178 m
-6400.8984 11647.7217 L
-6400.8818 11647.4229 L
-6400.8486 11647.7178 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 55)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-6435.9727 11649.54 m
-6435.9727 11623.5117 L
-6462 11623.5117 L
-6462 11649.54 L
-6435.9727 11649.54 L
n
0 Ap
0 R
0.7084 0.636438 0.515526 0.381872 K
1.125 w-6462 11632.1865 m
-6435.9727 11632.1865 l
S
0.64 0.650477 0.701045 0.510735 K
-6462 11640.8643 m
-6435.9727 11640.8643 l
S
0.597742 0.537865 0.64184 0.350469 K
0.375 w-6462 11636.5254 m
-6435.9727 11636.5254 l
S
0 O
0.597742 0.537865 0.64184 0.350469 k
1 w-6440.5742 11636.5518 m
-6440.3442 11636.2803 -6440.6914 11635.9941 -6441 11635.7832 c
-6441.1118 11635.7061 -6441.5215 11635.9189 -6441.7466 11635.7529 c
-6442.0439 11635.5352 -6442.1826 11635.4482 -6442.4824 11635.4541 c
-6442.6455 11635.459 -6443.0435 11635.5879 -6443.1895 11635.6182 c
-6443.5679 11635.6943 -6443.8022 11635.8916 -6444.3672 11635.7949 c
-6444.7344 11635.7314 -6444.8286 11635.6406 -6444.9233 11635.6885 c
-6445.1118 11635.8301 -6445.2202 11636.0537 -6445.4258 11636.1025 c
-6445.9575 11636.2295 -6446.3535 11636.2734 -6446.8818 11636.2627 c
-6447.3047 11636.2529 -6448.4185 11636.3213 -6449.2866 11636.2217 c
-6449.6226 11636.1816 -6449.6025 11635.7568 -6449.7695 11635.7529 c
-6449.8618 11635.752 -6449.7646 11636.0664 -6449.8306 11636.0869 c
-6450.1694 11636.1934 -6450.4702 11635.0439 -6450.6943 11635.1123 c
-6450.8047 11635.1475 -6450.5562 11635.6934 -6450.6729 11635.7217 c
-6450.8975 11635.7773 -6451.2178 11634.7588 -6451.4321 11634.8213 c
-6451.5635 11634.8584 -6451.2886 11635.2783 -6451.4375 11635.3467 c
-6451.6655 11635.4512 -6451.9087 11634.5752 -6452.1064 11634.6738 C
-6452.1543 11634.7217 -6451.7295 11635.4775 -6452.1685 11635.4189 c
-6452.2871 11635.4014 -6452.5054 11634.8535 -6452.5801 11634.8799 c
-6452.6919 11634.9199 -6452.3535 11635.3418 -6452.4897 11635.4678 C
-6452.7681 11635.6943 -6453.3711 11634.7031 -6453.4575 11634.7744 c
-6453.5791 11634.877 -6453.1279 11635.6377 -6453.2695 11635.7061 C
-6453.4497 11635.9697 -6454.0142 11635.0928 -6454.0889 11635.1416 c
-6454.1777 11635.2002 -6453.9058 11635.5781 -6453.8799 11635.7734 c
-6453.8545 11635.9678 -6453.9966 11636.1016 -6454.2144 11636.0498 c
-6454.4736 11635.9873 -6454.8696 11635.1816 -6454.9727 11635.2754 C
-6455.0791 11635.3311 -6454.8682 11635.6182 -6454.7954 11635.8525 c
-6454.7583 11635.9678 -6454.8882 11636.1416 -6455.0298 11636.1416 c
-6455.3135 11636.1895 -6455.6255 11635.5381 -6455.7065 11635.6426 c
-6455.7524 11635.7021 -6455.5898 11636.0303 -6455.7295 11636.1279 c
-6455.8994 11636.2461 -6456.3115 11635.7783 -6456.4521 11635.834 C
-6456.5361 11635.8818 -6456.4126 11636.1367 -6456.4927 11636.1934 c
-6456.7295 11636.3594 -6457.0039 11635.9609 -6457.0513 11636.0088 C
-6457.1167 11636.0313 -6457.1201 11636.0762 -6457.2793 11636.1807 c
-6457.4736 11636.3076 -6457.5254 11636.3887 -6457.5425 11636.5049 c
-6457.5654 11636.624 -6457.3135 11636.916 -6457.1655 11636.8896 c
-6456.8223 11636.8301 -6456.8662 11637.3896 -6456.6328 11637.2559 c
-6456.5679 11637.2197 -6456.6592 11636.7988 -6456.4199 11636.8057 c
-6456.0488 11636.8184 -6455.9858 11637.3613 -6455.7817 11637.3506 c
-6455.6406 11637.3438 -6455.8521 11636.7236 -6455.6328 11636.8008 c
-6455.4751 11636.8564 -6455.0063 11637.8418 -6454.9795 11637.75 c
-6454.8975 11637.4824 -6455.0703 11636.9385 -6454.9409 11636.9482 c
-6454.7568 11636.9629 -6454.5078 11637.8574 -6454.2544 11637.9775 c
-6454.1826 11638.0127 -6454.3774 11637.1406 -6454.1958 11637.1367 C
-6454.0898 11637.1865 -6453.7578 11637.9893 -6453.6274 11638.0381 C
-6453.5591 11638.0225 -6453.5879 11637.666 -6453.5176 11637.6445 c
-6453.4688 11637.6299 -6453.2817 11638.1055 -6453.21 11638.0635 c
-6453.1055 11638.0029 -6453.2471 11637.5322 -6453.0889 11637.4629 c
-6452.9175 11637.3887 -6452.4878 11638.4326 -6452.3486 11638.3379 c
-6452.2769 11638.29 -6452.3574 11637.75 -6452.21 11637.7861 c
-6452.0718 11637.8184 -6451.9414 11638.1543 -6451.8081 11638.1826 c
-6451.7295 11638.1982 -6451.7935 11637.7314 -6451.7495 11637.7139 c
-6451.5889 11637.6553 -6451.2329 11638.2119 -6451.0688 11638.0635 c
-6450.8584 11637.876 -6450.9395 11637.5098 -6450.8345 11637.5225 c
-6450.6274 11637.5459 -6450.4912 11637.7832 -6450.4146 11637.7236 c
-6450.2642 11637.6084 -6450.3281 11637.3193 -6450.0527 11637.2324 c
-6449.8975 11637.1826 -6449.7935 11637.4746 -6449.7495 11637.4707 c
-6449.6738 11637.4678 -6449.6782 11637.3701 -6449.6665 11637.2646 c
-6449.6328 11637.002 -6449.6064 11636.9395 -6449.4878 11636.918 c
-6449.0854 11636.8936 -6448.5625 11636.8242 -6448.1807 11636.8154 c
-6447.6274 11636.8008 -6446.2607 11636.7773 -6446.1182 11636.7773 c
-6446 11636.7529 -6445.7432 11636.9346 -6445.6689 11637.002 c
-6445.4678 11637.1855 -6445.2998 11637.3994 -6444.9858 11637.6602 c
-6444.8906 11637.7412 -6444.8081 11637.7207 -6444.7378 11637.6963 c
-6444.5249 11637.626 -6444.4585 11637.5732 -6444.2202 11637.543 c
-6443.9175 11637.5 -6443.4272 11637.5889 -6443.1245 11637.6826 c
-6442.6035 11637.8418 -6442.5264 11637.8643 -6442.0977 11637.8154 c
-6441.6992 11637.7695 -6441.0586 11637.6982 -6441.0479 11637.3506 c
-6441.0415 11637.1357 -6440.9414 11636.9834 -6440.5742 11636.5518 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 56)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-6435.9722 11649.54 m
-6435.9722 11623.5127 L
-6462 11623.5127 L
-6462 11649.54 L
-6435.9722 11649.54 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-6444.6455 11636.5293 m
-6435.9736 11636.5293 l
S
-6448.9839 11649.54 m
-6448.9839 11640.8643 l
S
0.7084 0.636438 0.515526 0.381872 K
1.125 w-6444.7202 11632.1904 m
-6435.9727 11632.1904 l
S
-6453.3232 11649.5391 m
-6453.3232 11640.1855 l
S
0.64 0.650477 0.701045 0.510735 K
-6444.6504 11649.5391 m
-6444.6504 11647.1279 l
-6441.9937 11646.9033 -6440.3096 11645.2002 v
-6438.6064 11643.4736 -6438.3774 11640.8682 y
-6435.9727 11640.8682 l
S
*u
1 D
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-6452.8418 11633.7256 m
-6452.8418 11633.79 -6452.8218 11633.8311 -6452.7783 11633.8311 c
-6452.6943 11633.8311 -6452.4634 11633.4941 -6452.3994 11633.4941 c
-6452.3154 11633.4941 -6452.2729 11633.5361 -6452.2729 11633.6416 c
-6452.2729 11633.7256 -6452.5264 11634.6328 y
-6452.5264 11634.6738 -6452.5264 11634.6738 -6452.5049 11634.6738 c
-6452.4414 11634.6738 -6452.0615 11634.1279 -6451.9351 11634.1279 c
-6451.9146 11634.1279 -6451.8936 11634.1475 -6451.8936 11634.1689 c
-6452.1675 11635.0752 -6452.1675 11635.2656 v
-6452.1675 11635.3291 -6452.1675 11635.3506 -6452.1465 11635.3506 c
-6452.1055 11635.3506 -6451.6826 11634.7803 -6451.5562 11634.7803 c
-6451.5352 11634.7803 -6451.5137 11634.8008 -6451.5137 11634.8223 c
-6451.5137 11634.8857 -6451.7666 11635.625 -6451.7666 11635.793 c
-6451.7666 11635.8359 -6451.7666 11635.8359 -6451.7446 11635.8359 c
-6451.6826 11635.8359 -6451.4722 11635.625 -6451.4297 11635.625 c
-6451.4082 11635.625 -6451.3882 11635.6455 -6451.3882 11635.667 c
-6451.3882 11635.6865 -6451.4927 11636.0459 -6451.4927 11636.1299 c
-6451.4927 11636.1514 -6451.4927 11636.1514 -6451.4722 11636.1514 c
-6451.4297 11636.1514 -6451.0918 11635.793 -6451.0078 11635.793 c
-6450.9658 11635.793 -6450.9233 11635.8359 -6450.9233 11635.9189 c
-6450.9233 11636.0674 -6451.1138 11636.7842 -6451.1138 11636.8262 c
-6451.1138 11636.9102 -6451.0918 11636.9521 -6451.0498 11636.9521 c
-6450.9658 11636.9521 -6450.7119 11636.6357 -6450.6494 11636.6357 c
-6450.5854 11636.6357 -6450.5439 11636.6563 -6450.5439 11636.7207 c
-6450.5854 11637.1416 L
-6450.5854 11637.2061 -6450.5854 11637.2256 -6450.5654 11637.2256 c
-6450.5225 11637.2256 -6450.2915 11636.9316 -6450.2065 11636.9316 c
-6450.1006 11636.9316 -6450.1006 11637.418 -6450.1006 11637.4795 c
-6450.1006 11637.5859 -6450.0166 11637.6689 -6449.8896 11637.6689 c
-6449.8057 11637.6689 -6449.4678 11637.4375 -6449.4473 11637.4375 c
-6449.3623 11637.4375 -6449.3198 11637.8799 -6449.2568 11637.8799 c
-6449.1943 11637.8799 -6448.9199 11637.7529 -6448.8564 11637.7529 c
-6448.6455 11637.7529 -6448.6035 11637.8389 -6448.6035 11638.0068 c
-6448.6255 11638.1543 L
-6448.6255 11638.1963 -6448.6035 11638.1963 -6448.5835 11638.1963 c
-6448.4985 11638.1963 -6448.2241 11637.9219 -6448.1392 11637.9219 c
-6447.9287 11637.9219 -6445.8198 11639.9893 -6445.5454 11640.2627 c
-6445.3984 11640.4307 -6445.3984 11640.7266 -6445.3984 11640.8535 c
-6445.3984 11641.7178 -6445.3984 11641.8018 -6445.2295 11641.8857 c
-6444.5977 11642.1396 -6444.5127 11642.2871 -6443.7334 11643.5732 c
-6443.6479 11643.7207 -6442.7407 11644.334 -6442.5942 11644.334 c
-6442.4878 11644.334 -6442.1094 11644.0791 -6442.0239 11644.0791 c
-6441.9194 11644.0791 -6441.8135 11644.1426 -6441.8135 11644.3105 c
-6441.8135 11644.7539 -6442.3408 11645.2607 -6442.9312 11645.2607 c
-6443.7534 11645.2607 -6444.0913 11644.5635 -6444.1338 11644.166 c
-6444.1543 11644.0166 -6444.2393 11643.9316 -6444.3447 11643.9316 c
-6444.3862 11643.9316 -6444.4287 11643.9521 -6444.4702 11644.0166 c
-6444.9561 11644.8174 -6445.9473 11645.2607 -6446.7065 11645.2607 c
-6447.7393 11645.2607 -6448.8774 11644.6279 -6449.3418 11644.3545 c
-6449.7842 11644.1016 -6450.4814 11643.9316 -6450.8809 11643.9316 c
-6451.3242 11643.9316 -6451.3662 11644.0791 -6451.3662 11644.334 c
-6451.3662 11644.4805 -6450.9023 11644.9219 -6450.9023 11645.0498 c
-6450.9023 11645.1758 -6451.0498 11645.2607 -6451.4082 11645.2607 c
-6451.8936 11645.2607 -6452.5679 11644.5439 -6452.5679 11643.7637 c
-6452.5679 11643.1514 -6451.7666 11642.626 -6451.3022 11642.626 c
-6450.3755 11642.626 -6450.0942 11642.9834 -6449.5264 11643.4473 c
-6449.4414 11643.5098 -6449.3774 11643.5322 -6449.3359 11643.5322 c
-6449.1895 11643.5322 -6449.1895 11642.4346 -6449.1895 11642.3096 c
-6449.1895 11642.1602 -6449.2729 11642.0977 -6449.3774 11642.0977 c
-6451.7822 11642.0977 -6456.6592 11640.875 -6458.3672 11634.7178 c
-6458.4297 11634.5059 -6458.5361 11634.4014 -6458.6406 11634.4014 c
-6458.7881 11634.4014 -6459.7793 11635.2441 -6459.7793 11636.8262 c
-6459.7793 11638.6602 -6458.5767 11639.6299 -6457.9873 11639.6299 c
-6457.8398 11639.6299 -6457.6494 11639.6094 -6457.6494 11639.4609 c
-6457.6494 11639.3984 -6457.6929 11639.3359 -6457.7759 11639.2295 c
-6458.1143 11638.8936 -6458.3672 11638.2598 -6458.3672 11637.9434 c
-6458.3672 11637.7314 -6458.2607 11637.5635 -6458.1143 11637.5635 c
-6457.9033 11637.5635 -6457.5654 11638.5127 -6457.46 11638.6602 c
-6457.3335 11638.8711 -6456.9546 11639.252 -6456.2378 11639.7783 c
-6455.4995 11640.3037 -6454.0654 11641.6123 -6454.0654 11642.8779 c
-6454.0654 11644.25 -6455.1191 11645.1553 -6455.9209 11645.1553 c
-6456.7007 11645.1553 -6457.6714 11644.6279 -6458.0713 11644.1426 c
-6458.7041 11643.4053 -6459.3154 11642.8359 -6459.8218 11642.8359 c
-6460.1592 11642.8359 -6460.3066 11643.0459 -6460.3066 11643.2568 c
-6460.3066 11643.5938 -6460.0537 11643.8262 -6459.5479 11643.8682 c
-6458.9575 11643.9111 -6458.8936 11644.334 -6458.8936 11644.6689 c
-6458.8936 11644.9434 -6459.4209 11645.2607 -6459.8433 11645.2607 c
-6460.4751 11645.2607 -6461.2974 11644.5635 -6461.2974 11642.7305 c
-6461.2974 11641.2324 -6460.0537 11640.7695 -6459.5679 11640.7695 c
-6459.1265 11640.7695 -6458.4722 11640.8535 -6458.0928 11641.1904 c
-6456.8066 11642.3936 -6456.1318 11642.6025 -6455.5835 11642.6025 c
-6455.3721 11642.6025 -6455.2881 11642.6025 -6455.2881 11642.752 c
-6455.2881 11643.0674 -6456.0474 11643.2568 -6456.1318 11643.2783 c
-6456.3423 11643.3408 -6456.5103 11643.5732 -6456.5103 11643.7842 c
-6456.5103 11644.2695 -6456.2378 11644.29 -6455.8774 11644.29 c
-6455.5215 11644.29 -6454.8042 11643.9316 -6454.8042 11642.7305 c
-6454.8042 11641.7393 -6455.9424 11640.5791 -6456.4058 11640.3477 c
-6456.7007 11640.1777 -6457.5874 11640.2002 -6457.9458 11640.1572 c
-6458.6406 11640.0723 -6460.4121 11639.126 -6460.4121 11636.6357 c
-6460.4336 11635.2227 -6459.1265 11633.8955 -6458.8511 11633.7061 c
-6458.6826 11633.5986 -6458.5986 11633.4727 -6458.5986 11633.3037 c
-6458.5986 11633.0928 -6458.6626 11630.1621 -6458.9995 11630.1621 c
-6459.4424 11630.1621 -6459.5054 11630.1621 -6459.5054 11630.3535 c
-6459.21 11631.4482 -6459.21 11631.6807 v
-6459.21 11631.9971 -6459.4424 11633.4727 -6460.3066 11633.4727 c
-6460.5806 11633.4727 -6461.0449 11633.2402 -6461.0449 11632.9248 c
-6461.0449 11632.6299 -6460.3486 11631.4277 -6460.3486 11631.1533 c
-6460.3486 11630.6689 -6460.3921 11630.6475 -6461.0654 11630.0361 c
-6461.2559 11629.8887 -6461.3193 11629.7627 -6461.3193 11629.5713 c
-6461.3193 11629.4033 -6461.2134 11629.2754 -6461.0449 11629.2754 c
-6460.8975 11629.2754 -6460.3281 11629.5518 -6460.2017 11629.5713 c
-6460.0752 11629.5713 -6459.8433 11629.5928 -6459.6538 11629.5928 c
-6459.2734 11629.5928 -6459.0845 11629.4658 -6459.0845 11629.3398 c
-6459.0845 11629.1074 -6459.0845 11628.4336 -6459.9263 11626.9775 c
-6460.1167 11626.6406 -6461.2974 11625.3125 -6461.2974 11624.9746 c
-6461.2974 11624.8057 -6461.2134 11624.7861 -6461.1089 11624.7861 c
-6460.9185 11624.7861 -6460.4966 11625.208 -6460.3706 11625.3545 c
-6459.1265 11626.6826 -6458.3042 11628.1162 -6457.9238 11629.3818 c
-6457.8398 11629.6982 -6457.7344 11629.6143 -6457.5654 11629.6357 c
-6455.4155 11630.1416 -6453.3271 11632.6504 -6453.3271 11632.6719 c
-6453.4326 11632.9453 -6453.4326 11633.0088 v
-6453.4326 11633.1357 -6453.3271 11633.1572 -6453.3057 11633.1572 c
-6453.2432 11633.1572 -6453.0527 11632.9453 -6453.0103 11632.9453 c
-6452.9058 11632.9453 -6452.7783 11633.0303 -6452.7783 11633.1777 C
-6452.8418 11633.7256 l
f
0 D
-6456.1104 11632.2295 m
-6455.5215 11632.2295 -6455.0986 11632.3359 -6454.6982 11632.6084 c
-6454.6553 11632.6299 -6454.6138 11632.6504 -6454.5928 11632.6504 c
-6454.5498 11632.6504 -6454.5498 11632.6299 -6454.5498 11632.5869 c
-6454.5498 11632.167 -6456.4272 11630.2061 -6457.5654 11630.2061 c
-6457.6289 11630.2061 -6457.6714 11630.2471 -6457.6714 11630.3096 c
-6457.6714 11630.5 -6457.5874 11632.5029 -6457.2495 11632.5029 c
-6457.1865 11632.5029 -6457.1016 11632.4814 -6457.0386 11632.4404 c
-6456.7007 11632.293 -6456.4902 11632.2295 -6456.1104 11632.2295 c
f
-6455.5835 11634.9912 m
-6455.5835 11634.5693 -6455.5625 11634.1055 -6454.8662 11634.1055 c
-6454.2334 11634.1055 -6453.6431 11634.7598 -6453.4961 11634.9072 c
-6453.4326 11634.9492 -6453.3906 11634.9697 -6453.3486 11634.9697 c
-6453.3271 11634.9697 -6453.2847 11634.9277 -6453.2847 11634.8857 c
-6453.2847 11634.4424 -6454.6553 11632.7773 -6456.0049 11632.7773 c
-6456.2578 11632.7773 -6457.2705 11632.9453 -6457.2705 11633.4941 c
-6457.2705 11633.7471 -6456.8906 11635.1182 -6456.2793 11636.1934 c
-6454.9087 11638.6816 -6450.7119 11640.2402 -6448.8145 11640.2402 c
-6447.9072 11640.2627 -6447.6118 11639.9463 -6447.4863 11639.9248 c
-6447.4648 11639.9248 -6447.4438 11639.9043 -6447.4233 11639.9043 c
-6447.3174 11639.9043 -6447.1904 11639.9678 -6447.1904 11640.1152 c
-6447.1904 11640.1367 -6447.2119 11640.1367 v
-6447.3594 11641.2744 -6447.4014 11641.6758 -6447.4014 11642.9395 c
-6447.4014 11644.334 -6447.4014 11644.46 -6446.4321 11644.46 c
-6445.1455 11644.46 -6444.8506 11643.3838 -6444.8506 11643.1514 c
-6444.8506 11642.7305 -6445.4399 11642.4346 -6445.5889 11642.4346 c
-6445.7358 11642.4346 -6445.9058 11642.543 -6445.9058 11642.7305 c
-6445.9058 11643.0254 -6445.9473 11643.1729 -6446.2207 11643.1729 c
-6446.4951 11643.1729 -6446.4951 11642.8145 -6446.4951 11642.709 c
-6446.4951 11642.4561 -6446.3896 11642.2031 -6446.1782 11642.0762 c
-6445.7998 11641.8232 -6445.7998 11641.4229 -6445.7998 11641.2119 c
-6445.7998 11641.1064 -6445.7998 11640.9795 -6445.8198 11640.875 c
-6445.8418 11640.7061 -6447.7817 11638.6602 -6448.0977 11638.6602 c
-6448.2446 11638.6602 -6448.5615 11638.8066 -6449.4258 11638.8066 c
-6451.5767 11638.8066 -6452.5474 11637.0791 -6452.7378 11636.5518 c
-6452.9897 11635.8359 -6453.7915 11635.5391 -6454.0225 11635.5391 c
-6454.2129 11635.5391 -6454.2129 11635.583 -6454.2129 11635.9824 c
-6454.2129 11636.0674 -6454.4238 11636.4033 y
-6454.4238 11636.5938 -6453.3906 11636.8467 -6453.3906 11637.0361 c
-6453.3906 11637.2061 -6453.5801 11637.2256 -6453.7271 11637.2256 c
-6453.8115 11637.2256 -6454.8882 11637.2256 -6455.3306 11636.4033 c
-6455.5415 11636.0029 -6455.5835 11635.4346 -6455.5835 11634.9912 c
f
1 D
-6451.4927 11632.7354 m
-6451.4927 11632.6914 -6451.5137 11632.6719 -6451.5352 11632.6719 c
-6451.5986 11632.6719 -6451.7666 11633.0088 -6451.8506 11633.0088 c
-6451.9146 11633.0088 -6451.9995 11632.9248 -6452.0415 11632.8184 c
-6452.0615 11632.7354 -6452.1255 11632.2705 -6452.21 11632.2705 c
-6452.2524 11632.2705 -6452.4209 11632.5029 -6452.4634 11632.5029 c
-6452.6104 11632.5029 -6452.7158 11632.2705 -6452.7158 11632.0615 c
-6452.7158 11631.9551 -6452.7783 11631.9551 -6452.9263 11631.9551 c
-6453.5166 11631.9551 -6455.1406 11629.7832 -6455.5625 11628.0322 c
-6455.6055 11627.8643 -6455.5835 11627.7168 -6455.8994 11627.6104 c
-6458.0713 11626.875 -6460.5176 11624.7217 -6460.5176 11624.5957 c
-6460.5176 11624.4482 -6460.4336 11624.3643 -6460.3066 11624.3643 c
-6460.2432 11624.3643 -6460.1592 11624.3643 -6459.6538 11624.7002 c
-6458.7681 11625.292 -6456.7217 11626.5781 -6455.8994 11626.5781 c
-6455.6265 11626.5781 -6455.6055 11626.2197 -6455.6055 11625.9658 c
-6455.6055 11625.7754 -6455.6265 11625.5439 -6455.6265 11625.3975 c
-6455.6465 11625.124 -6455.9634 11624.8057 -6455.9634 11624.6377 c
-6455.9634 11624.4902 -6455.8154 11624.3848 -6455.6465 11624.3848 c
-6455.4575 11624.3848 -6455.3306 11624.4063 -6455.1606 11624.5957 c
-6454.8662 11624.9326 -6454.7402 11625.0811 -6454.4238 11625.0811 c
-6454.1914 11625.0811 -6453.1377 11624.3643 -6452.8838 11624.3643 c
-6452.5679 11624.3643 -6452.1895 11624.8486 -6452.1895 11625.1445 c
-6452.1895 11625.8818 -6453.0942 11626.4727 -6453.6431 11626.4727 c
-6454.0225 11626.4727 -6454.4438 11626.3467 -6454.6353 11626.1143 c
-6454.6982 11626.0498 -6454.7607 11626.0088 -6454.8242 11626.0088 c
-6454.9937 11626.0088 -6455.1191 11626.4727 -6455.1191 11626.5146 c
-6455.1191 11626.9375 -6452.2729 11627 -6451.9146 11627 c
-6451.7666 11627 -6451.6401 11626.916 -6451.5352 11626.7461 c
-6451.3447 11626.4521 -6450.1855 11625.2295 -6448.6255 11625.2295 c
-6446.79 11625.2295 -6445.0825 11626.4922 -6445.0825 11628.3906 c
-6445.0825 11628.4971 -6445.1245 11629.0439 -6445.1245 11629.0664 c
-6445.1245 11629.1299 -6444.0063 11630.8789 -6442.6782 11630.8789 c
-6441.6245 11630.8789 -6441.2656 11630.29 -6441.2656 11629.8037 c
-6441.2656 11629.5713 -6441.3711 11628.9189 -6441.8984 11628.9189 c
-6442.1094 11628.9189 -6442.2144 11629.1299 -6442.2144 11629.5088 c
-6442.2144 11629.5928 -6442.0039 11629.9727 -6442.0039 11630.0781 c
-6442.0039 11630.1201 -6442.0239 11630.1416 -6442.0879 11630.1416 c
-6442.4258 11630.1416 -6442.9521 11629.7832 -6443.1846 11629.1299 c
-6443.4595 11628.4131 -6443.8594 11627.7168 -6444.1958 11627.3154 c
-6444.5127 11626.959 -6444.6182 11626.3662 -6444.6182 11626.0293 c
-6444.6182 11625.5439 -6444.1338 11624.3848 -6442.4878 11624.3848 c
-6441.2871 11624.3848 -6440.4434 11625.124 -6440.4434 11625.7344 c
-6440.4434 11626.3467 -6440.7598 11626.7256 -6441.2026 11626.7256 c
-6441.6455 11626.7256 -6441.9824 11626.3877 -6441.9824 11626.0498 c
-6441.9824 11625.377 -6442.1514 11625.2295 -6442.4878 11625.2295 c
-6442.6992 11625.2295 -6442.8896 11625.3545 -6442.8896 11625.6709 c
-6442.8896 11625.9033 -6442.8896 11626.2822 -6441.3711 11627.5479 c
-6440.8857 11627.9482 -6440.4214 11628.6455 -6440.4214 11629.4248 c
-6440.4214 11630.1846 -6441.4561 11631.3848 -6442.6362 11631.3848 c
-6443.8594 11631.3848 -6444.6401 11630.6055 -6445.2515 11629.8887 c
-6445.5454 11629.5518 -6446.9814 11627.8643 -6447.0439 11627.8418 c
-6447.2334 11627.6943 -6447.3174 11627.5693 -6447.3174 11627.4424 c
-6447.3174 11627.3369 -6447.2119 11627.2314 -6447.0854 11627.2314 c
-6446.8535 11627.2314 -6445.9058 11628.1807 -6445.8198 11628.1807 c
-6445.7568 11628.1807 -6445.7153 11628.1162 -6445.7153 11628.0322 c
-6445.7153 11627.2734 -6446.8535 11625.7979 -6448.6255 11625.7979 c
-6450.1006 11625.7979 -6450.9863 11626.916 -6450.9863 11626.959 c
-6450.9863 11627.085 -6450.8394 11627.21 -6450.5225 11627.2734 c
-6446.6426 11628.0117 -6443.3955 11631.5615 -6443.3955 11636.1777 c
-6443.3955 11636.2842 -6443.2256 11636.3105 -6443.0786 11636.3105 c
-6442.7202 11636.3105 -6442.0879 11636.3896 -6442.0879 11636.1162 c
-6442.0879 11636.0098 -6442.1294 11635.8838 -6442.1934 11635.7568 c
-6442.5518 11635.1865 -6442.8682 11635.0127 -6442.8682 11634.0615 c
-6442.8682 11633.5986 -6442.4878 11633.0723 -6441.8984 11633.0723 c
-6440.8657 11633.0723 -6440.4214 11634.1055 -6440.4214 11634.3369 c
-6440.4214 11634.5059 -6440.5073 11634.5693 -6440.5903 11634.5693 c
-6440.7178 11634.5693 -6441.2241 11634.043 -6441.3711 11634.043 c
-6441.5615 11634.043 -6441.7085 11634.085 -6441.7085 11634.5693 c
-6441.7085 11634.9072 -6440.4214 11638.6182 -6440.4214 11639.4189 c
-6440.4214 11639.9893 -6440.7598 11640.6855 -6441.6455 11641.1904 c
-6441.6875 11641.2119 -6441.7085 11641.2324 -6441.7085 11641.2744 c
-6441.7085 11641.3584 -6441.5615 11641.4648 -6441.4126 11641.5059 c
-6440.8018 11641.6758 -6440.4214 11641.7813 -6440.4214 11642.7305 c
-6440.4214 11643.0889 -6440.7598 11643.7637 -6441.0127 11643.7637 c
-6441.2026 11643.7637 -6441.2026 11643.7207 -6441.2026 11643.3623 c
-6441.2026 11643.2148 -6441.2446 11643.1094 -6441.3926 11643.0039 c
-6441.7085 11642.7939 -6441.7295 11642.752 -6441.8135 11642.2666 c
-6441.8774 11641.9502 -6442.0039 11641.8643 -6443.1426 11641.2324 c
-6443.5854 11640.96 -6443.6904 11640.7266 -6443.7744 11640.4951 c
-6443.8594 11640.3037 -6443.9233 11640.3037 -6444.4287 11640.3037 c
-6444.9561 11640.3037 -6447.5073 11637.5859 -6447.5073 11637.459 c
-6447.5073 11637.3955 -6447.3809 11637.0996 -6447.3809 11637.0361 c
-6447.3809 11636.9736 -6447.4014 11636.9316 -6447.4438 11636.9316 c
-6447.4863 11636.9316 -6447.6338 11637.1416 -6447.6758 11637.1416 c
-6447.7817 11637.1416 -6447.7817 11636.9521 -6447.7817 11636.8037 c
-6447.7817 11636.7002 -6447.5703 11636.1299 -6447.5703 11635.9824 c
-6447.5703 11635.8984 -6447.5918 11635.8359 -6447.6338 11635.8359 c
-6447.7178 11635.8359 -6447.9072 11636.2979 -6447.9922 11636.2979 c
-6448.0342 11636.2979 -6448.0762 11636.2568 -6448.0762 11636.1299 c
-6448.0762 11635.9824 -6447.8862 11635.2656 y
-6447.8862 11635.2021 -6447.9072 11635.0967 -6447.9502 11635.0967 c
-6448.0342 11635.0967 -6448.1826 11635.4971 -6448.2666 11635.4971 c
-6448.3286 11635.4971 -6448.3926 11635.4131 -6448.3926 11635.2656 c
-6448.3926 11635.1807 -6448.2446 11634.7598 -6448.2446 11634.6543 c
-6448.2446 11634.5908 -6448.2666 11634.5264 -6448.3086 11634.5264 c
-6448.3506 11634.5264 -6448.5835 11635.1396 -6448.7095 11635.1396 c
-6448.7935 11635.1396 -6448.8994 11635.0322 -6448.8994 11634.9277 c
-6448.8994 11634.8438 -6448.7729 11634.4854 -6448.7729 11634.4014 c
-6448.7729 11634.3584 -6448.7729 11634.3369 -6448.7935 11634.3369 c
-6448.8774 11634.3369 -6449.0254 11634.8223 -6449.1104 11634.8223 c
-6449.3418 11634.8223 -6449.3623 11634.4014 -6449.3623 11634.2109 c
-6449.3623 11634.1279 -6449.2998 11633.79 -6449.2998 11633.7256 c
-6449.2998 11633.6631 -6449.3198 11633.6416 -6449.3418 11633.6416 c
-6449.4897 11633.6416 -6449.6782 11634.4424 -6449.8271 11634.4424 c
-6450.0386 11634.4424 -6450.0386 11634.2529 -6450.0386 11634.0215 c
-6450.0166 11633.4941 L
-6450.0166 11633.4727 -6450.0386 11633.4521 y
-6450.0586 11633.4521 -6450.1006 11633.4727 -6450.1226 11633.5361 c
-6450.1855 11633.7471 -6450.3115 11634.1689 -6450.5225 11634.1689 c
-6450.6694 11634.1689 -6450.8174 11634 -6450.8174 11633.8535 c
-6450.8174 11633.6201 -6450.7119 11633.2402 -6450.7119 11633.0088 c
-6450.7119 11632.9453 -6450.7334 11632.9248 -6450.7754 11632.9248 c
-6450.8608 11632.9248 -6450.9863 11633.3662 -6451.0278 11633.4521 c
-6451.0918 11633.5361 -6451.1553 11633.5576 -6451.2192 11633.5576 c
-6451.5352 11633.5576 -6451.5352 11633.2402 -6451.5352 11633.0928 C
-6451.4927 11632.7354 l
f
0 D
-6452.8633 11628.3701 m
-6452.8633 11628.1377 -6454.8042 11627.9482 -6454.8662 11627.9482 c
-6454.9722 11627.9482 -6455.0352 11628.0117 -6455.0352 11628.1162 c
-6455.0352 11628.9814 -6453.2847 11631.2168 -6452.8633 11631.2168 c
-6452.7998 11631.2168 -6452.7783 11631.1963 -6452.7783 11631.1328 c
-6453.2002 11629.8887 -6453.2002 11629.6357 v
-6453.2002 11629.2559 -6453.0942 11629.0029 -6452.9058 11628.5811 c
-6452.8838 11628.4971 -6452.8633 11628.4336 -6452.8633 11628.3701 c
f
-6444.1338 11639.8193 m
-6443.9858 11639.8193 -6443.4795 11639.3145 -6443.3325 11639.3145 c
-6443.2065 11639.3145 -6443.0791 11639.3984 -6443.0791 11639.5459 c
-6443.0791 11639.6299 -6443.2695 11640.0723 -6443.2695 11640.1777 c
-6443.2695 11640.5361 -6442.8896 11640.834 -6442.5098 11640.834 c
-6442.1094 11640.834 -6440.9702 11640.5156 -6440.9702 11639.293 c
-6440.9702 11638.1963 -6441.3926 11638.1963 -6443.0366 11638.1963 c
-6443.3955 11638.1963 -6445.0615 11638.3857 -6445.3145 11638.3857 c
-6445.4399 11638.3857 -6445.4834 11638.2168 -6445.4834 11638.0898 c
-6445.4834 11638.0488 -6445.4834 11638.0068 -6445.4614 11637.9854 c
-6445.3984 11637.6064 -6445.1675 11637.0576 -6445.1675 11636.6777 c
-6445.1675 11632.2295 -6449.2998 11628.3701 -6451.7666 11628.3701 c
-6452.4209 11628.3701 -6452.6519 11629.1719 -6452.6519 11629.5928 c
-6452.6519 11631.3223 -6450.6694 11632.3545 -6450.4175 11632.3545 c
-6450.3545 11632.3545 -6450.3335 11632.3359 -6450.3335 11632.293 c
-6450.3335 11632.25 -6450.3545 11632.209 -6450.3975 11632.167 c
-6450.5225 11631.9971 -6451.0498 11631.3848 -6451.0498 11630.7529 c
-6451.0498 11630.416 -6450.7554 11629.9727 -6449.9951 11629.9727 c
-6448.7305 11629.9727 -6448.1826 11631.3223 -6448.1826 11631.6807 c
-6448.1826 11631.8291 -6448.2446 11632.0391 -6448.4561 11632.0391 c
-6448.6035 11632.0391 -6449.0049 11631.3848 -6449.1519 11631.3848 c
-6449.2158 11631.3848 -6449.4473 11631.5117 -6449.5103 11631.5117 c
-6449.5942 11631.5117 -6449.6582 11631.4912 -6449.7422 11631.4912 c
-6449.8057 11631.4912 -6449.8481 11631.5537 -6449.8481 11631.6592 c
-6449.8481 11632.0186 -6449.3623 11632.5869 -6448.8774 11632.8408 c
-6447.9722 11633.3037 -6446.6226 11634.6328 -6446.6226 11636.0879 c
-6446.6226 11636.5088 -6446.6846 11636.9102 -6446.6846 11637.2471 c
-6446.6846 11637.7959 -6445.7568 11638.6602 -6444.8081 11639.5459 c
-6444.6401 11639.6934 -6444.3862 11639.8193 -6444.1338 11639.8193 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 57)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-6435.9722 11649.54 m
-6435.9722 11623.5127 L
-6462 11623.5127 L
-6462 11649.54 L
-6435.9722 11649.54 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-6444.6455 11636.5293 m
-6435.9736 11636.5293 l
S
-6448.9839 11649.54 m
-6448.9839 11640.8643 l
S
0.64 0.650477 0.701045 0.510735 K
1.125 w-6444.7202 11632.1904 m
-6435.9727 11632.1904 l
S
-6453.3232 11649.54 m
-6453.3232 11640.1855 l
S
0.7084 0.636438 0.515526 0.381872 K
-6444.6504 11649.54 m
-6444.6504 11647.1279 l
-6441.9937 11646.9033 -6440.3096 11645.2002 v
-6438.6064 11643.4736 -6438.3774 11640.8682 y
-6435.9727 11640.8682 l
S
*u
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-6452.7783 11633.1777 m
-6452.7783 11633.0303 -6452.9058 11632.9453 -6453.0103 11632.9453 c
-6453.0527 11632.9453 -6453.2432 11633.1572 -6453.3057 11633.1572 c
-6453.3271 11633.1572 -6453.4326 11633.1357 -6453.4326 11633.0088 c
-6453.4326 11632.9453 -6453.3271 11632.6719 y
-6453.3271 11632.6504 -6455.4155 11630.1416 -6457.5654 11629.6357 c
-6457.7344 11629.6143 -6457.8398 11629.6982 -6457.9238 11629.3818 c
-6458.3042 11628.1162 -6459.1265 11626.6826 -6460.3706 11625.3545 c
-6460.4966 11625.209 -6460.9185 11624.7861 -6461.1089 11624.7861 c
-6461.2134 11624.7861 -6461.2974 11624.8057 -6461.2974 11624.9746 c
-6461.2974 11625.3125 -6460.1167 11626.6406 -6459.9263 11626.9775 c
-6459.0845 11628.4336 -6459.0845 11629.1074 -6459.0845 11629.3398 c
-6459.0845 11629.4658 -6459.2734 11629.5928 -6459.6538 11629.5928 c
-6459.8433 11629.5928 -6460.0752 11629.5713 -6460.2017 11629.5713 c
-6460.3281 11629.5518 -6460.8975 11629.2754 -6461.0449 11629.2754 c
-6461.2134 11629.2754 -6461.3193 11629.4033 -6461.3193 11629.5713 c
-6461.3193 11629.7627 -6461.2559 11629.8887 -6461.0654 11630.0361 c
-6460.3921 11630.6475 -6460.3486 11630.6689 -6460.3486 11631.1533 c
-6460.3486 11631.4277 -6461.0449 11632.6299 -6461.0449 11632.9248 c
-6461.0449 11633.2402 -6460.5806 11633.4727 -6460.3066 11633.4727 c
-6459.4424 11633.4727 -6459.21 11631.9971 -6459.21 11631.6807 c
-6459.21 11631.4482 -6459.5054 11630.3535 y
-6459.5054 11630.1621 -6459.4424 11630.1621 -6458.9995 11630.1621 c
-6458.6626 11630.1621 -6458.5986 11633.0928 -6458.5986 11633.3037 c
-6458.5986 11633.4727 -6458.6826 11633.5986 -6458.8511 11633.7061 c
-6459.1265 11633.8955 -6460.4336 11635.2227 -6460.4121 11636.6357 c
-6460.4121 11639.126 -6458.6406 11640.0723 -6457.9458 11640.1572 c
-6457.5874 11640.2002 -6456.7007 11640.1777 -6456.4058 11640.3477 c
-6455.9424 11640.5791 -6454.8042 11641.7393 -6454.8042 11642.7305 c
-6454.8042 11643.9316 -6455.5215 11644.29 -6455.8774 11644.29 c
-6456.2378 11644.29 -6456.5103 11644.2695 -6456.5103 11643.7842 c
-6456.5103 11643.5732 -6456.3423 11643.3408 -6456.1318 11643.2783 c
-6456.0474 11643.2568 -6455.2881 11643.0674 -6455.2881 11642.752 c
-6455.2881 11642.6025 -6455.3721 11642.6025 -6455.5835 11642.6025 c
-6456.1318 11642.6025 -6456.8066 11642.3936 -6458.0928 11641.1904 c
-6458.4722 11640.8535 -6459.1265 11640.7695 -6459.5679 11640.7695 c
-6460.0537 11640.7695 -6461.2974 11641.2324 -6461.2974 11642.7305 c
-6461.2974 11644.5635 -6460.4751 11645.2607 -6459.8433 11645.2607 c
-6459.4209 11645.2607 -6458.8936 11644.9434 -6458.8936 11644.6689 c
-6458.8936 11644.334 -6458.9575 11643.9111 -6459.5479 11643.8682 c
-6460.0537 11643.8262 -6460.3066 11643.5938 -6460.3066 11643.2568 c
-6460.3066 11643.0459 -6460.1592 11642.8359 -6459.8218 11642.8359 c
-6459.3154 11642.8359 -6458.7041 11643.4053 -6458.0713 11644.1426 c
-6457.6714 11644.6279 -6456.7007 11645.1553 -6455.9209 11645.1553 c
-6455.1191 11645.1553 -6454.0654 11644.25 -6454.0654 11642.8779 c
-6454.0654 11641.6123 -6455.4995 11640.3037 -6456.2378 11639.7783 c
-6456.9546 11639.252 -6457.3335 11638.8711 -6457.46 11638.6602 c
-6457.5654 11638.5127 -6457.9033 11637.5635 -6458.1143 11637.5635 c
-6458.2607 11637.5635 -6458.3672 11637.7314 -6458.3672 11637.9434 c
-6458.3672 11638.2598 -6458.1143 11638.8936 -6457.7759 11639.2295 c
-6457.6929 11639.3359 -6457.6494 11639.3984 -6457.6494 11639.4609 c
-6457.6494 11639.6094 -6457.8398 11639.6299 -6457.9873 11639.6299 c
-6458.5767 11639.6299 -6459.7793 11638.6602 -6459.7793 11636.8262 c
-6459.7793 11635.2441 -6458.7881 11634.4014 -6458.6406 11634.4014 c
-6458.5361 11634.4014 -6458.4297 11634.5059 -6458.3672 11634.7178 c
-6456.6592 11640.875 -6451.7822 11642.0977 -6449.3774 11642.0977 c
-6449.2729 11642.0977 -6449.1895 11642.1602 -6449.1895 11642.3096 c
-6449.1895 11642.4346 -6449.1895 11643.5322 -6449.3359 11643.5322 c
-6449.3774 11643.5322 -6449.4414 11643.5098 -6449.5264 11643.4473 c
-6450.0942 11642.9834 -6450.3755 11642.626 -6451.3022 11642.626 c
-6451.7666 11642.626 -6452.5679 11643.1514 -6452.5679 11643.7637 c
-6452.5679 11644.5439 -6451.8936 11645.2607 -6451.4082 11645.2607 c
-6451.0498 11645.2607 -6450.9023 11645.1758 -6450.9023 11645.0498 c
-6450.9023 11644.9219 -6451.3662 11644.4805 -6451.3662 11644.334 c
-6451.3662 11644.0791 -6451.3242 11643.9316 -6450.8809 11643.9316 c
-6450.4814 11643.9316 -6449.7842 11644.1016 -6449.3418 11644.3545 c
-6448.8774 11644.6279 -6447.7393 11645.2607 -6446.7065 11645.2607 c
-6445.9473 11645.2607 -6444.9561 11644.8174 -6444.4702 11644.0166 c
-6444.4287 11643.9521 -6444.3862 11643.9316 -6444.3447 11643.9316 c
-6444.2393 11643.9316 -6444.1543 11644.0166 -6444.1338 11644.166 c
-6444.0913 11644.5635 -6443.7534 11645.2607 -6442.9312 11645.2607 c
-6442.3408 11645.2607 -6441.8135 11644.7539 -6441.8135 11644.3105 c
-6441.8135 11644.1426 -6441.9194 11644.0791 -6442.0239 11644.0791 c
-6442.1094 11644.0791 -6442.4878 11644.334 -6442.5942 11644.334 c
-6442.7407 11644.334 -6443.6479 11643.7207 -6443.7334 11643.5732 c
-6444.5127 11642.2871 -6444.5977 11642.1396 -6445.2295 11641.8857 c
-6445.3984 11641.8018 -6445.3984 11641.7178 -6445.3984 11640.8535 c
-6445.3984 11640.7266 -6445.3984 11640.4307 -6445.5454 11640.2627 c
-6445.8198 11639.9893 -6447.9287 11637.9219 -6448.1392 11637.9219 c
-6448.2241 11637.9219 -6448.4985 11638.1963 -6448.5835 11638.1963 c
-6448.6035 11638.1963 -6448.6255 11638.1963 -6448.6255 11638.1543 C
-6448.6035 11638.0068 l
-6448.6035 11637.8389 -6448.6455 11637.7529 -6448.8564 11637.7529 c
-6448.9199 11637.7529 -6449.1943 11637.8799 -6449.2568 11637.8799 c
-6449.3198 11637.8799 -6449.3623 11637.4375 -6449.4473 11637.4375 c
-6449.4678 11637.4375 -6449.8057 11637.6689 -6449.8896 11637.6689 c
-6450.0166 11637.6689 -6450.1006 11637.5859 -6450.1006 11637.4795 c
-6450.1006 11637.418 -6450.1006 11636.9316 -6450.2065 11636.9316 c
-6450.2915 11636.9316 -6450.5225 11637.2256 -6450.5654 11637.2256 c
-6450.5854 11637.2256 -6450.5854 11637.2061 -6450.5854 11637.1416 C
-6450.5439 11636.7207 l
-6450.5439 11636.6563 -6450.5854 11636.6357 -6450.6494 11636.6357 c
-6450.7119 11636.6357 -6450.9658 11636.9521 -6451.0498 11636.9521 c
-6451.0918 11636.9521 -6451.1138 11636.9102 -6451.1138 11636.8262 c
-6451.1138 11636.7842 -6450.9233 11636.0674 -6450.9233 11635.9189 c
-6450.9233 11635.8359 -6450.9658 11635.793 -6451.0078 11635.793 c
-6451.0918 11635.793 -6451.4297 11636.1514 -6451.4722 11636.1514 c
-6451.4927 11636.1514 -6451.4927 11636.1514 -6451.4927 11636.1299 c
-6451.4927 11636.0459 -6451.3882 11635.6865 -6451.3882 11635.668 c
-6451.3882 11635.6455 -6451.4082 11635.625 -6451.4297 11635.625 c
-6451.4722 11635.625 -6451.6826 11635.8359 -6451.7446 11635.8359 c
-6451.7666 11635.8359 -6451.7666 11635.8359 -6451.7666 11635.793 c
-6451.7666 11635.625 -6451.5137 11634.8857 -6451.5137 11634.8223 c
-6451.5137 11634.8008 -6451.5352 11634.7803 -6451.5562 11634.7803 c
-6451.6826 11634.7803 -6452.1055 11635.3506 -6452.1465 11635.3506 c
-6452.1675 11635.3506 -6452.1675 11635.3291 -6452.1675 11635.2656 c
-6452.1675 11635.0752 -6451.8936 11634.1689 y
-6451.8936 11634.1475 -6451.9146 11634.1279 -6451.9351 11634.1279 c
-6452.0615 11634.1279 -6452.4414 11634.6738 -6452.5049 11634.6738 c
-6452.5264 11634.6738 -6452.5264 11634.6738 -6452.5264 11634.6328 c
-6452.2729 11633.7256 -6452.2729 11633.6416 v
-6452.2729 11633.5361 -6452.3154 11633.4941 -6452.3994 11633.4941 c
-6452.4634 11633.4941 -6452.6943 11633.8311 -6452.7783 11633.8311 c
-6452.8218 11633.8311 -6452.8418 11633.79 -6452.8418 11633.7256 c
-6452.7783 11633.1777 L
f
1 D
-6457.0386 11632.4404 m
-6457.1016 11632.4814 -6457.1865 11632.5029 -6457.2495 11632.5029 c
-6457.5874 11632.5029 -6457.6714 11630.5 -6457.6714 11630.3096 c
-6457.6714 11630.2471 -6457.6289 11630.2061 -6457.5654 11630.2061 c
-6456.4272 11630.2061 -6454.5498 11632.168 -6454.5498 11632.5869 c
-6454.5498 11632.6299 -6454.5498 11632.6504 -6454.5928 11632.6504 c
-6454.6138 11632.6504 -6454.6553 11632.6299 -6454.6982 11632.6084 c
-6455.0986 11632.3359 -6455.5215 11632.2295 -6456.1104 11632.2295 c
-6456.4902 11632.2295 -6456.7007 11632.293 -6457.0386 11632.4404 c
f
-6455.3306 11636.4033 m
-6454.8882 11637.2256 -6453.8115 11637.2256 -6453.7271 11637.2256 c
-6453.5801 11637.2256 -6453.3906 11637.2061 -6453.3906 11637.0361 c
-6453.3906 11636.8467 -6454.4238 11636.5938 -6454.4238 11636.4033 c
-6454.2129 11636.0674 -6454.2129 11635.9824 v
-6454.2129 11635.584 -6454.2129 11635.54 -6454.0225 11635.54 c
-6453.7915 11635.54 -6452.9897 11635.8359 -6452.7378 11636.5518 c
-6452.5474 11637.0791 -6451.5767 11638.8066 -6449.4258 11638.8066 c
-6448.5615 11638.8066 -6448.2446 11638.6602 -6448.0977 11638.6602 c
-6447.7817 11638.6602 -6445.8418 11640.7061 -6445.8198 11640.875 c
-6445.7998 11640.9795 -6445.7998 11641.1064 -6445.7998 11641.2119 c
-6445.7998 11641.4229 -6445.7998 11641.8232 -6446.1782 11642.0762 c
-6446.3896 11642.2031 -6446.4951 11642.4561 -6446.4951 11642.709 c
-6446.4951 11642.8145 -6446.4951 11643.1729 -6446.2207 11643.1729 c
-6445.9473 11643.1729 -6445.9058 11643.0254 -6445.9058 11642.7305 c
-6445.9058 11642.543 -6445.7358 11642.4346 -6445.5889 11642.4346 c
-6445.4399 11642.4346 -6444.8506 11642.7305 -6444.8506 11643.1514 c
-6444.8506 11643.3838 -6445.1455 11644.46 -6446.4321 11644.46 c
-6447.4014 11644.46 -6447.4014 11644.334 -6447.4014 11642.9395 c
-6447.4014 11641.6758 -6447.3594 11641.2744 -6447.2119 11640.1367 c
-6447.1904 11640.1367 -6447.1904 11640.1152 y
-6447.1904 11639.9678 -6447.3174 11639.9043 -6447.4233 11639.9043 c
-6447.4438 11639.9043 -6447.4648 11639.9248 -6447.4863 11639.9248 c
-6447.6118 11639.9463 -6447.9072 11640.2627 -6448.8145 11640.2402 c
-6450.7119 11640.2402 -6454.9087 11638.6816 -6456.2793 11636.1934 c
-6456.8906 11635.1182 -6457.2705 11633.7471 -6457.2705 11633.4941 c
-6457.2705 11632.9453 -6456.2578 11632.7773 -6456.0049 11632.7773 c
-6454.6553 11632.7773 -6453.2847 11634.4424 -6453.2847 11634.8857 c
-6453.2847 11634.9277 -6453.3271 11634.9697 -6453.3486 11634.9697 c
-6453.3906 11634.9697 -6453.4326 11634.9492 -6453.4961 11634.9072 c
-6453.6431 11634.7598 -6454.2334 11634.1055 -6454.8662 11634.1055 c
-6455.5625 11634.1055 -6455.5835 11634.5693 -6455.5835 11634.9912 c
-6455.5835 11635.4346 -6455.5415 11636.0029 -6455.3306 11636.4033 c
f
0 D
-6451.5352 11633.0928 m
-6451.5352 11633.2402 -6451.5352 11633.5576 -6451.2192 11633.5576 c
-6451.1553 11633.5576 -6451.0918 11633.5361 -6451.0278 11633.4521 c
-6450.9863 11633.3662 -6450.8608 11632.9248 -6450.7754 11632.9248 c
-6450.7334 11632.9248 -6450.7119 11632.9453 -6450.7119 11633.0088 c
-6450.7119 11633.2402 -6450.8174 11633.6201 -6450.8174 11633.8535 c
-6450.8174 11634 -6450.6694 11634.1689 -6450.5225 11634.1689 c
-6450.3115 11634.1689 -6450.1855 11633.7471 -6450.1226 11633.5361 c
-6450.1006 11633.4727 -6450.0586 11633.4521 -6450.0386 11633.4521 c
-6450.0166 11633.4727 -6450.0166 11633.4941 V
-6450.0386 11634.0215 l
-6450.0386 11634.2529 -6450.0386 11634.4424 -6449.8271 11634.4424 c
-6449.6782 11634.4424 -6449.4897 11633.6416 -6449.3418 11633.6416 c
-6449.3198 11633.6416 -6449.2998 11633.6631 -6449.2998 11633.7256 c
-6449.2998 11633.79 -6449.3623 11634.1279 -6449.3623 11634.2109 c
-6449.3623 11634.4014 -6449.3418 11634.8223 -6449.1104 11634.8223 c
-6449.0254 11634.8223 -6448.8774 11634.3369 -6448.7935 11634.3369 c
-6448.7729 11634.3369 -6448.7729 11634.3584 -6448.7729 11634.4014 c
-6448.7729 11634.4854 -6448.8994 11634.8438 -6448.8994 11634.9277 c
-6448.8994 11635.0322 -6448.7935 11635.1396 -6448.7095 11635.1396 c
-6448.5835 11635.1396 -6448.3506 11634.5264 -6448.3086 11634.5264 c
-6448.2666 11634.5264 -6448.2446 11634.5908 -6448.2446 11634.6543 c
-6448.2446 11634.7598 -6448.3926 11635.1807 -6448.3926 11635.2656 c
-6448.3926 11635.4131 -6448.3286 11635.4971 -6448.2666 11635.4971 c
-6448.1826 11635.4971 -6448.0342 11635.0967 -6447.9502 11635.0967 c
-6447.9072 11635.0967 -6447.8862 11635.2021 -6447.8862 11635.2656 c
-6448.0762 11635.9824 -6448.0762 11636.1299 v
-6448.0762 11636.2568 -6448.0342 11636.2979 -6447.9922 11636.2979 c
-6447.9072 11636.2979 -6447.7178 11635.8359 -6447.6338 11635.8359 c
-6447.5918 11635.8359 -6447.5703 11635.8984 -6447.5703 11635.9824 c
-6447.5703 11636.1299 -6447.7817 11636.7002 -6447.7817 11636.8037 c
-6447.7817 11636.9521 -6447.7817 11637.1416 -6447.6758 11637.1416 c
-6447.6338 11637.1416 -6447.4863 11636.9316 -6447.4438 11636.9316 c
-6447.4014 11636.9316 -6447.3809 11636.9736 -6447.3809 11637.0361 c
-6447.3809 11637.0996 -6447.5073 11637.3955 -6447.5073 11637.459 c
-6447.5073 11637.5859 -6444.9561 11640.3037 -6444.4287 11640.3037 c
-6443.9233 11640.3037 -6443.8594 11640.3037 -6443.7744 11640.4951 c
-6443.6904 11640.7266 -6443.5854 11640.96 -6443.1426 11641.2324 c
-6442.0039 11641.8643 -6441.8774 11641.9502 -6441.8135 11642.2666 c
-6441.7295 11642.752 -6441.7085 11642.7939 -6441.3926 11643.0039 c
-6441.2446 11643.1094 -6441.2026 11643.2148 -6441.2026 11643.3623 c
-6441.2026 11643.7207 -6441.2026 11643.7637 -6441.0127 11643.7637 c
-6440.7598 11643.7637 -6440.4214 11643.0889 -6440.4214 11642.7305 c
-6440.4214 11641.7813 -6440.8018 11641.6758 -6441.4126 11641.5059 c
-6441.5615 11641.4648 -6441.7085 11641.3584 -6441.7085 11641.2744 c
-6441.7085 11641.2324 -6441.6875 11641.2119 -6441.6455 11641.1904 c
-6440.7598 11640.6855 -6440.4214 11639.9893 -6440.4214 11639.4189 c
-6440.4214 11638.6182 -6441.7085 11634.9072 -6441.7085 11634.5693 c
-6441.7085 11634.085 -6441.5615 11634.043 -6441.3711 11634.043 c
-6441.2241 11634.043 -6440.7178 11634.5693 -6440.5903 11634.5693 c
-6440.5073 11634.5693 -6440.4214 11634.5059 -6440.4214 11634.3369 c
-6440.4214 11634.1055 -6440.8657 11633.0723 -6441.8984 11633.0723 c
-6442.4878 11633.0723 -6442.8682 11633.5986 -6442.8682 11634.0615 c
-6442.8682 11635.0127 -6442.5518 11635.1865 -6442.1934 11635.7568 c
-6442.1294 11635.8838 -6442.0879 11636.0098 -6442.0879 11636.1162 c
-6442.0879 11636.3896 -6442.7202 11636.3105 -6443.0786 11636.3105 c
-6443.2256 11636.3105 -6443.3955 11636.2842 -6443.3955 11636.1777 c
-6443.3955 11631.5615 -6446.6426 11628.0117 -6450.5225 11627.2734 c
-6450.8394 11627.21 -6450.9863 11627.085 -6450.9863 11626.959 c
-6450.9863 11626.916 -6450.1006 11625.7979 -6448.6255 11625.7979 c
-6446.8535 11625.7979 -6445.7153 11627.2734 -6445.7153 11628.0322 c
-6445.7153 11628.1162 -6445.7568 11628.1807 -6445.8198 11628.1807 c
-6445.9058 11628.1807 -6446.8535 11627.2314 -6447.0854 11627.2314 c
-6447.2119 11627.2314 -6447.3174 11627.3369 -6447.3174 11627.4424 c
-6447.3174 11627.5693 -6447.2334 11627.6943 -6447.0439 11627.8418 c
-6446.9814 11627.8643 -6445.5454 11629.5518 -6445.2515 11629.8887 c
-6444.6401 11630.6055 -6443.8594 11631.3848 -6442.6362 11631.3848 c
-6441.4561 11631.3848 -6440.4214 11630.1846 -6440.4214 11629.4248 c
-6440.4214 11628.6455 -6440.8857 11627.9482 -6441.3711 11627.5479 c
-6442.8896 11626.2822 -6442.8896 11625.9033 -6442.8896 11625.6709 c
-6442.8896 11625.3545 -6442.6992 11625.2295 -6442.4878 11625.2295 c
-6442.1514 11625.2295 -6441.9824 11625.377 -6441.9824 11626.0498 c
-6441.9824 11626.3877 -6441.6455 11626.7256 -6441.2026 11626.7256 c
-6440.7598 11626.7256 -6440.4434 11626.3467 -6440.4434 11625.7344 c
-6440.4434 11625.125 -6441.2871 11624.3848 -6442.4878 11624.3848 c
-6444.1338 11624.3848 -6444.6182 11625.5439 -6444.6182 11626.0293 c
-6444.6182 11626.3662 -6444.5127 11626.959 -6444.1958 11627.3154 c
-6443.8594 11627.7168 -6443.4595 11628.4131 -6443.1846 11629.1299 c
-6442.9521 11629.7832 -6442.4258 11630.1416 -6442.0879 11630.1416 c
-6442.0239 11630.1416 -6442.0039 11630.1201 -6442.0039 11630.0781 c
-6442.0039 11629.9727 -6442.2144 11629.5928 -6442.2144 11629.5088 c
-6442.2144 11629.1299 -6442.1094 11628.9189 -6441.8984 11628.9189 c
-6441.3711 11628.9189 -6441.2656 11629.5713 -6441.2656 11629.8037 c
-6441.2656 11630.29 -6441.6245 11630.8789 -6442.6782 11630.8789 c
-6444.0063 11630.8789 -6445.1245 11629.1299 -6445.1245 11629.0664 c
-6445.1245 11629.0439 -6445.0825 11628.4971 -6445.0825 11628.3906 c
-6445.0825 11626.4922 -6446.79 11625.2295 -6448.6255 11625.2295 c
-6450.1855 11625.2295 -6451.3447 11626.4521 -6451.5352 11626.7461 c
-6451.6401 11626.916 -6451.7666 11627 -6451.9146 11627 c
-6452.2729 11627 -6455.1191 11626.9375 -6455.1191 11626.5146 c
-6455.1191 11626.4727 -6454.9937 11626.0088 -6454.8242 11626.0088 c
-6454.7607 11626.0088 -6454.6982 11626.0498 -6454.6353 11626.1143 c
-6454.4438 11626.3467 -6454.0225 11626.4727 -6453.6431 11626.4727 c
-6453.0942 11626.4727 -6452.1895 11625.8818 -6452.1895 11625.1445 c
-6452.1895 11624.8486 -6452.5679 11624.3643 -6452.8838 11624.3643 c
-6453.1377 11624.3643 -6454.1914 11625.0811 -6454.4238 11625.0811 c
-6454.7402 11625.0811 -6454.8662 11624.9326 -6455.1606 11624.5957 c
-6455.3306 11624.4063 -6455.4575 11624.3848 -6455.6465 11624.3848 c
-6455.8154 11624.3848 -6455.9634 11624.4902 -6455.9634 11624.6377 c
-6455.9634 11624.8057 -6455.6465 11625.125 -6455.6265 11625.3975 c
-6455.6265 11625.5439 -6455.6055 11625.7754 -6455.6055 11625.9658 c
-6455.6055 11626.2197 -6455.6265 11626.5781 -6455.8994 11626.5781 c
-6456.7217 11626.5781 -6458.7681 11625.293 -6459.6538 11624.7002 c
-6460.1592 11624.3643 -6460.2432 11624.3643 -6460.3066 11624.3643 c
-6460.4336 11624.3643 -6460.5176 11624.4482 -6460.5176 11624.5957 c
-6460.5176 11624.7217 -6458.0713 11626.875 -6455.8994 11627.6104 c
-6455.5835 11627.7168 -6455.6055 11627.8643 -6455.5625 11628.0322 c
-6455.1406 11629.7832 -6453.5166 11631.9561 -6452.9263 11631.9561 c
-6452.7783 11631.9561 -6452.7158 11631.9561 -6452.7158 11632.0615 c
-6452.7158 11632.2705 -6452.6104 11632.5029 -6452.4634 11632.5029 c
-6452.4209 11632.5029 -6452.2524 11632.2705 -6452.21 11632.2705 c
-6452.1255 11632.2705 -6452.0615 11632.7354 -6452.0415 11632.8184 c
-6451.9995 11632.9248 -6451.9146 11633.0088 -6451.8506 11633.0088 c
-6451.7666 11633.0088 -6451.5986 11632.6719 -6451.5352 11632.6719 c
-6451.5137 11632.6719 -6451.4927 11632.6914 -6451.4927 11632.7354 c
-6451.5352 11633.0928 L
f
1 D
-6452.9058 11628.5811 m
-6453.0942 11629.0029 -6453.2002 11629.2559 -6453.2002 11629.6357 c
-6453.2002 11629.8887 -6452.7783 11631.1328 y
-6452.7783 11631.1963 -6452.7998 11631.2168 -6452.8633 11631.2168 c
-6453.2847 11631.2168 -6455.0352 11628.9814 -6455.0352 11628.1162 c
-6455.0352 11628.0117 -6454.9722 11627.9482 -6454.8662 11627.9482 c
-6454.8042 11627.9482 -6452.8633 11628.1377 -6452.8633 11628.3701 c
-6452.8633 11628.4336 -6452.8838 11628.4971 -6452.9058 11628.5811 c
f
-6444.8081 11639.5459 m
-6445.7568 11638.6602 -6446.6846 11637.7959 -6446.6846 11637.2471 c
-6446.6846 11636.9102 -6446.6226 11636.5088 -6446.6226 11636.0879 c
-6446.6226 11634.6328 -6447.9722 11633.3037 -6448.8774 11632.8408 c
-6449.3623 11632.5869 -6449.8481 11632.0186 -6449.8481 11631.6592 c
-6449.8481 11631.5537 -6449.8057 11631.4912 -6449.7422 11631.4912 c
-6449.6582 11631.4912 -6449.5942 11631.5117 -6449.5103 11631.5117 c
-6449.4473 11631.5117 -6449.2158 11631.3848 -6449.1519 11631.3848 c
-6449.0049 11631.3848 -6448.6035 11632.04 -6448.4561 11632.04 c
-6448.2446 11632.04 -6448.1826 11631.8291 -6448.1826 11631.6807 c
-6448.1826 11631.3223 -6448.7305 11629.9727 -6449.9951 11629.9727 c
-6450.7554 11629.9727 -6451.0498 11630.416 -6451.0498 11630.7529 c
-6451.0498 11631.3848 -6450.5225 11631.9971 -6450.3975 11632.168 c
-6450.3545 11632.209 -6450.3335 11632.25 -6450.3335 11632.293 c
-6450.3335 11632.3359 -6450.3545 11632.3545 -6450.4175 11632.3545 c
-6450.6694 11632.3545 -6452.6519 11631.3223 -6452.6519 11629.5928 c
-6452.6519 11629.1719 -6452.4209 11628.3701 -6451.7666 11628.3701 c
-6449.2998 11628.3701 -6445.1675 11632.2295 -6445.1675 11636.6777 c
-6445.1675 11637.0576 -6445.3984 11637.6064 -6445.4614 11637.9854 c
-6445.4834 11638.0068 -6445.4834 11638.0488 -6445.4834 11638.0898 c
-6445.4834 11638.2168 -6445.4399 11638.3857 -6445.3145 11638.3857 c
-6445.0615 11638.3857 -6443.3955 11638.1963 -6443.0366 11638.1963 c
-6441.3926 11638.1963 -6440.9702 11638.1963 -6440.9702 11639.293 c
-6440.9702 11640.5156 -6442.1094 11640.834 -6442.5098 11640.834 c
-6442.8896 11640.834 -6443.2695 11640.5361 -6443.2695 11640.1777 c
-6443.2695 11640.0723 -6443.0791 11639.6299 -6443.0791 11639.5459 c
-6443.0791 11639.3984 -6443.2065 11639.3145 -6443.3325 11639.3145 c
-6443.4795 11639.3145 -6443.9858 11639.8193 -6444.1338 11639.8193 c
-6444.3862 11639.8193 -6444.6401 11639.6934 -6444.8081 11639.5459 c
f
*U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -
(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -
(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -
( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Charcoal/ Adobe Art) -
(OnPath Brush Tool/ Tapered Stroke/ Adobe ArtOnPath Brush Tool/) -
( Floral Spoke/ Adobe PatternOnPath Brush Tool/ Red Arrow Brush) -
( / Adobe PatternOnPath Brush Tool/ Gothic/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt. Round)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Oval)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Oval)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. Round)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Charcoal)
(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Floral Spoke)
(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Tapered Stroke)
(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Gothic)
(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -
(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Red Arrow Brush )
(1 / Unnamed Brush Pat 158/ Unnamed Brush Pat 160/ Unnamed Brus) -
(h Pat 160/ Unnamed Brush Pat 162/ Unnamed Brush Pat 161/ 5 0.0) -
(196078 0.027451 0.0313726 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 k
(White)
Pc
0 0 0 1 k
(Black)
Pc
0 1 1 0 k
(CMYK Red)
Pc
0 0 1 0 k
(CMYK Yellow)
Pc
1 0 1 0 k
(CMYK Green)
Pc
1 0 0 0 k
(CMYK Cyan)
Pc
1 1 0 0 k
(CMYK Blue)
Pc
0 1 0 0 k
(CMYK Magenta)
Pc
0.15 1 0.9 0.1 k
(C=15 M=100 Y=90 K=10)
Pc
0 0.9 0.85 0 k
(C=0 M=90 Y=85 K=0)
Pc
0 0.8 0.95 0 k
(C=0 M=80 Y=95 K=0)
Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0)
Pc
0 0.35 0.85 0 k
(C=0 M=35 Y=85 K=0)
Pc
0.05 0 0.9 0 k
(C=5 M=0 Y=90 K=0)
Pc
0.2 0 1 0 k
(C=20 M=0 Y=100 K=0)
Pc
0.5 0 1 0 k
(C=50 M=0 Y=100 K=0)
Pc
0.75 0 1 0 k
(C=75 M=0 Y=100 K=0)
Pc
0.85 0.1 1 0.1 k
(C=85 M=10 Y=100 K=10)
Pc
0.9 0.3 0.95 0.3 k
(C=90 M=30 Y=95 K=30)
Pc
0.75 0 0.75 0 k
(C=75 M=0 Y=75 K=0)
Pc
0.8 0.1 0.45 0 k
(C=80 M=10 Y=45 K=0)
Pc
0.7 0.15 0 0 k
(C=70 M=15 Y=0 K=0)
Pc
0.85 0.5 0 0 k
(C=85 M=50 Y=0 K=0)
Pc
1 0.95 0.05 0 k
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.25 0.25 k
(C=100 M=100 Y=25 K=25)
Pc
0.75 1 0 0 k
(C=75 M=100 Y=0 K=0)
Pc
0.5 1 0 0 k
(C=50 M=100 Y=0 K=0)
Pc
0.35 1 0.35 0.1 k
(C=35 M=100 Y=35 K=10)
Pc
0.1 1 0.5 0 k
(C=10 M=100 Y=50 K=0)
Pc
0 0.95 0.2 0 k
(C=0 M=95 Y=20 K=0)
Pc
0.25 0.25 0.4 0 k
(C=25 M=25 Y=40 K=0)
Pc
0.4 0.45 0.5 0.05 k
(C=40 M=45 Y=50 K=5)
Pc
0.5 0.5 0.6 0.25 k
(C=50 M=50 Y=60 K=25)
Pc
0.55 0.6 0.65 0.4 k
(C=55 M=60 Y=65 K=40)
Pc
0.25 0.4 0.65 0 k
(C=25 M=40 Y=65 K=0)
Pc
0.3 0.5 0.75 0.1 k
(C=30 M=50 Y=75 K=10)
Pc
0.35 0.6 0.8 0.25 k
(C=35 M=60 Y=80 K=25)
Pc
0.4 0.65 0.9 0.35 k
(C=40 M=65 Y=90 K=35)
Pc
0.4 0.7 1 0.5 k
(C=40 M=70 Y=100 K=50)
Pc
0.5 0.7 0.8 0.7 k
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (Linear Gradient) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Linear Gradient)
Pc
Bb
2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Fade to Black)
Pc
Bb
0 0 0 0 Bh
2 (Radial Gradient) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Radial Gradient)
Pc
Bb
0 0 0 0 Bh
2 (Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Soft Black Vignette)
Pc
Bb
2 (Desert Sunset) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Desert Sunset)
Pc
Bb
0 0 0 0 Bh
2 (Copper Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Copper Radial)
Pc
(Fish Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Fish Pattern)
Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100)
Pc
0 0 0 0.899994 k
(C=0 M=0 Y=0 K=90)
Pc
0 0 0 0.799988 k
(C=0 M=0 Y=0 K=80)
Pc
0 0 0 0.699997 k
(C=0 M=0 Y=0 K=70)
Pc
0 0 0 0.599991 k
(C=0 M=0 Y=0 K=60)
Pc
0 0 0 0.5 k
(C=0 M=0 Y=0 K=50)
Pc
0 0 0 0.399994 k
(C=0 M=0 Y=0 K=40)
Pc
0 0 0 0.299988 k
(C=0 M=0 Y=0 K=30)
Pc
0 0 0 0.199997 k
(C=0 M=0 Y=0 K=20)
Pc
0 0 0 0.099991 k
(C=0 M=0 Y=0 K=10)
Pc
0 0 0 0.049988 k
(C=0 M=0 Y=0 K=5)
Pc
0 1 1 0 k
(C=0 M=100 Y=100 K=0)
Pc
0 0.75 1 0 k
(C=0 M=75 Y=100 K=0)
Pc
0 0.1 0.95 0 k
(C=0 M=10 Y=95 K=0)
Pc
0.85 0.1 1 0 k
(C=85 M=10 Y=100 K=0)
Pc
1 0.9 0 0 k
(C=100 M=90 Y=0 K=0)
Pc
0.6 0.9 0.000031 0.000031 k
(C=60 M=90 Y=0 K=0)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
1 Ap
0 D
0 O
0.777344 0.085938 0.453125 0 k
0 J 0 j 1 w 4 M []0 d0 XR
1700.1758 3818.5313 m
1700.1758 3484.5195 L
1607.5928 3484.5186 L
1607.5908 3818.5313 L
1700.1758 3818.5313 L
f
1 1 0 0 k
1976.6152 3788.2373 m
1976.6152 3197.9297 L
1918.6514 3197.9307 L
1918.6533 3788.2363 L
1976.6152 3788.2373 L
f
0 1 1 0 k
1541.8945 3685.9893 m
1541.8945 3097.0264 L
1480.7842 3097.0273 L
1480.7842 3685.9902 L
1541.8945 3685.9893 L
f
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
